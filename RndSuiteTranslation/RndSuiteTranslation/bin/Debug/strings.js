var strings = window.strings || {};
(function (strings, undefined) {
     /* ActionBar - start */
     strings.actionBar = { };
     strings.actionBar.Add = "Add";
     strings.actionBar.AddNewItem = " Add new Bom items";
     strings.actionBar.Approve = "Approve";
     strings.actionBar.Assign = "Assign";
     strings.actionBar.AssignDocument = "Add Document";
     strings.actionBar.AssigNew = "Assign New";
     strings.actionBar.AssignParameters = "Assign Test Plan";
     strings.actionBar.AssignParametersOverview = "Assign Test Plan Overview";
     strings.actionBar.AssignSamples = "Assign New Samples";
     strings.actionBar.AssignTestPlan = "Assign Test Plan";
     strings.actionBar.AssignToUsers = "Assign To Users";
     strings.actionBar.Attributes = "Attributes";
     strings.actionBar.AttributesBtn = "Details";
     strings.actionBar.BackToRequest = "Back To Request";
     strings.actionBar.BackToSearchResults = "Back to search results";
     strings.actionBar.BomExplosion = "BoM Explosion";
     strings.actionBar.Cancel = "Cancel";
     strings.actionBar.ChangeLayout = " Change Bom layout";
     strings.actionBar.ChartTypes = "Chart Types";
     strings.actionBar.Clear = "Clear";
     strings.actionBar.ConfigurePropertyFilter = "Configure Property Filter";
     strings.actionBar.ConfirmComplete = "Complete";
     strings.actionBar.Copy = "Copy";
     strings.actionBar.CopySample = "Copy Sample";
     strings.actionBar.CopySpecification = "Copy Specification";
     strings.actionBar.Create = "Create";
     strings.actionBar.CreateAndAssign = "Create and Assign";
     strings.actionBar.CreateAndContinue = "Create and Continue";
     strings.actionBar.CreateAndOpen = "Create and Open";
     strings.actionBar.CreateAndSearch = "Create and New Search";
     strings.actionBar.CreateAttribute = "Create Attribute";
     strings.actionBar.CreatedRequests = "Created Requests";
     strings.actionBar.CreatedSamples = "Created Samples";
     strings.actionBar.CreatedStudies = "Created Studies";
     strings.actionBar.CreatedWorksheets = "Created Work Sheets";
     strings.actionBar.CreateNew = "Create New {0}";
     strings.actionBar.CreateNewMaterial = "Create New Material";
     strings.actionBar.CreateNewVersion = "Create New Version";
     strings.actionBar.CreateSample = "Create Sample";
     strings.actionBar.CreateSampleWithSameSampleType = "Create sample with same sample type";
     strings.actionBar.CreateShortcut = "Create Shortcut";
     strings.actionBar.DiscardCustomLaunchpad = "Delete Custom Launchpad";
     strings.actionBar.DiscardLaunchpad = "Delete Launchpad";
     strings.actionBar.Download = "Download";
     strings.actionBar.DownloadBackendLog = "Download Backend Log";
     strings.actionBar.DownloadDocument = "Download Document";
     strings.actionBar.DownloadEventManagerLog = "Download EventManager Log";
     strings.actionBar.DownloadFrontEndVersioningLog = "Download FrontEnd Versioning";
     strings.actionBar.DownloadRnDSuiteLog = "Download RnDSuite Log";
     strings.actionBar.DownloadUnilinkLog = "Download Unilink Log";
     strings.actionBar.EditLaunchpad = "Edit Launchpad";
     strings.actionBar.ExitEditMode = "Exit Editing";
     strings.actionBar.FilterAgain = "Filter again";
     strings.actionBar.Home = "Home";
     strings.actionBar.InvalidateIntervention = "Invalidate";
     strings.actionBar.Layouts = "Layouts";
     strings.actionBar.LoadExistingSpec = "Load Specification";
     strings.actionBar.Locations = "Locations";
     strings.actionBar.LocationTypes = "Location Types";
     strings.actionBar.Make = "Make ";
     strings.actionBar.MakeActive = "Make Active";
     strings.actionBar.MakeEditable = "Make Editable";
     strings.actionBar.MakeHistoric = "Make Historic";
     strings.actionBar.MergeCharts = "Merge Charts";
     strings.actionBar.MethodToWorksheetAssignment = "Assign Methods to Work Sheet";
     strings.actionBar.msg_ErrURL = "Error URL";
     strings.actionBar.Multiple = "Multiple ";
     strings.actionBar.Next = "Next";
     strings.actionBar.NoButtonInActionBarMenu = "Drag and drop buttons from action bar into this area.";
     strings.actionBar.Open = "Open";
     strings.actionBar.Open = "Open";
     strings.actionBar.OpenAllSamples = "Open All Samples";
     strings.actionBar.OpenSamples = "Open Samples";
     strings.actionBar.OpenSelectedSamples = "Open Selected Samples";
     strings.actionBar.OpenSOPDocument = "Open SOP Document: {0}";
     strings.actionBar.OpenSpecifications = "Open Specifications";
     strings.actionBar.Print = "Print";
     strings.actionBar.ReAnalysis = "Re-analysis";
     strings.actionBar.Refresh = "Refresh";
     strings.actionBar.RefreshShortcuts = "Refresh Shortcuts";
     strings.actionBar.Reject = "Reject";
     strings.actionBar.RemoveMethod = "Remove Method";
     strings.actionBar.RequestClass = "Configure Request Class";
     strings.actionBar.Reset = "Reset";
     strings.actionBar.ResetFilterString = "Reset Filter";
     strings.actionBar.Save = "Save";
     strings.actionBar.SaveAndBack = "Save and Back to Search Results";
     strings.actionBar.SaveAndOpen = "Save and Open";
     strings.actionBar.SaveAndOpenPivot = "Save and Open Pivot";
     strings.actionBar.SaveAndOpenRequest = "Save and Open {0}";
     strings.actionBar.SaveAndSearch = "Save and New Search";
     strings.actionBar.SaveAs = "Save As...";
     strings.actionBar.SaveBeforeStatusChange = "Save before changing status";
     strings.actionBar.Search = "Search";
     strings.actionBar.SearchAgain = "New Search";
     strings.actionBar.SelectEquipment = "Select Equipment";
     strings.actionBar.SetAsDefault = "Set As Default";
     strings.actionBar.SpecSetAlarm = "Parameter Alarm";
     strings.actionBar.SpecTypes = "Specification Types";
     strings.actionBar.StartIntervention = "Start Intervention";
     strings.actionBar.StatusChange = "Status Change";
     strings.actionBar.StatusTo = "Status to ";
     strings.actionBar.TaskDefinition = "Task Definition";
     strings.actionBar.TransferObject = "Transfer objects";
     strings.actionBar.UploadDocument = "Upload Document";
     strings.actionBar.ValidateIntervention = "Validate";
     /*actionBar endRegion*/
     /*addComment region*/
     strings.addComment = { };
     strings.addComment.AddAComment = "Add a comment";
     strings.addComment.AddCommentFor = "Add comment for {0} '{1} {2}'";
     strings.addComment.AddCommentForSelectedItems = "Add comment for selected items";
     strings.addComment.AddConfigCommentFor = "Add comment for {0} '{1}'";
     strings.addComment.AddConfigCommentForWithVersion = "Add comment for {0} '{1}'[{2}]";
     strings.addComment.SelectComment = "Select a comment...";
     strings.addComment.TypeComment = "Type comment...";
     /*addComment endRegion*/
     /*barCode region*/
     strings.barCode = { };
     strings.barCode.SelectFiles = "Select files...";
     strings.barCode.SelectImage = "Select barcode image:";
     /*barCode endRegion*/
     /*Buttons region*/
     strings.Buttons = { };
     strings.Buttons.Add = "Add";
     strings.Buttons.AddAndClose = "Add and Close";
     strings.Buttons.AddCalculation = "Add Calculation";
     strings.Buttons.AddLabel = "Add Label";
     strings.Buttons.AddMaterial = "Add Material";
     strings.Buttons.AddMaterialAttribute = "Add Material Attribute";
     strings.Buttons.AddParameter = "Add Parameter";
     strings.Buttons.AddReport = "Add Report";
     strings.Buttons.Assign = "Assign";
     strings.Buttons.AssignInfoFieldDef = "Assign info field definitions";
     strings.Buttons.AssignObject = "Assign {0}";
     strings.Buttons.AssignRequest = "Assign Request";
     strings.Buttons.AssignSample = "Assign Sample";
     strings.Buttons.AssignSpecification = "Assign Specification";
     strings.Buttons.Browse = "Browse";
     strings.Buttons.Cancel = "Cancel";
     strings.Buttons.ClearMakeUp = "Clear MakeUp";
     strings.Buttons.CloseList = "Close list";
     strings.Buttons.Continue = "Continue";
     strings.Buttons.Create = "Create";
     strings.Buttons.CreateAndAssign = "Create and Assign";
     strings.Buttons.CreateLink = "Create Link";
     strings.Buttons.Delete = "Delete";
     strings.Buttons.Discard = "Discard";
     strings.Buttons.Done = "Done";
     strings.Buttons.Download = "Download";
     strings.Buttons.Edit = "Edit";
     strings.Buttons.GlobalMode = "Global";
     strings.Buttons.IsMakeUp = "Set MakeUp";
     strings.Buttons.No = "No";
     strings.Buttons.NoSkipIt = "No, skip it";
     strings.Buttons.Ok = "OK";
     strings.Buttons.PersonalMode = "Personal";
     strings.Buttons.Preview = "Preview";
     strings.Buttons.Refresh = "Refresh";
     strings.Buttons.Remove = "Remove";
     strings.Buttons.Save = "Save";
     strings.Buttons.SaveAndClose = "Save and Close";
     strings.Buttons.SaveAndComplete = "Save and Complete";
     strings.Buttons.Select = "Select";
     strings.Buttons.SelectImage = "Select Image";
     strings.Buttons.SwitchToHierarchy = "Switch to hierarchy mode";
     strings.Buttons.SwitchToNonHierarchy = "Switch to non-hierarchy mode";
     strings.Buttons.Synchronize = "Synchronize";
     strings.Buttons.Unpin = "Unpin";
     strings.Buttons.Validate = "Validate";
     strings.Buttons.Yes = "Yes";
     /*Buttons endRegion*/
     /*cellTypes region*/
     strings.cellTypes = { };
     strings.cellTypes.Button = "Button";
     strings.cellTypes.calField = "Calculated Field";
     strings.cellTypes.checkBox = "CheckBox";
     strings.cellTypes.comboBox = "Combobox";
     strings.cellTypes.dateControl = "Date Control";
     strings.cellTypes.dateTimeControl = "DateTime Control";
     strings.cellTypes.dropDownList = "Dropdown List";
     strings.cellTypes.editField = "Edit Field";
     strings.cellTypes.Field = "Field";
     strings.cellTypes.fixedTextBox = "Fixed Textbox";
     strings.cellTypes.multilineEField = "MultiLine Edit Field";
     strings.cellTypes.radioButton = "Radio Button";
     strings.cellTypes.richTextBox = "Richtextbox";
     strings.cellTypes.SingleLineEditBox = "SingleLineEditBox";
     strings.cellTypes.spinBox = "Spinbox";
     strings.cellTypes.spreadSheet = "Spread Sheet";
     /*cellTypes endRegion*/
     /*CM region*/
     strings.CM = { };
     strings.CM.Active = "Active";
     strings.CM.AlignLeft = "Align Left";
     strings.CM.AlignRight = "Align Right";
     strings.CM.AlignTop = "Align Top";
     strings.CM.AssignSOPDocument = "Assign Standard Operating Procedures Document";
     strings.CM.AvailableColumns = "Available columns";
     strings.CM.Cancel = "Cancel";
     strings.CM.CellHasNoFormula = "Cell has no formula!";
     strings.CM.Clone = "Clone";
     strings.CM.ColumnOptions = "Column options";
     strings.CM.ContactImageDropFileHint = " to upload a new image.";
     strings.CM.DesignLayout = "Design Layout";
     strings.CM.DocumentsDropFileHint = " to upload new documents";
     strings.CM.DropFile = "Drop a file or click ";
     strings.CM.DropFileHereLink = "here";
     strings.CM.DropFiles = "Drop files or click ";
     strings.CM.Grouping = "Group";
     strings.CM.ImageDropFileHint = " to upload a new image. Click the 'Select Image' button to select an existing image from the database.";
     strings.CM.InEditing = "Editable";
     strings.CM.LayoutColumnFilterPLaceholder = "Filter Column";
     strings.CM.Loading = "Loading ... ";
     strings.CM.Navigation = "Navigate";
     strings.CM.NewAttribute = "New Attribute";
     strings.CM.NewElement = "New Element";
     strings.CM.NoImageAssigned = "No image has been assigned.";
     strings.CM.NoSOPAssigned = "No SOP document has been assigned.";
     strings.CM.PleaseSelectImage = "Please select an image file!";
     strings.CM.Preview = "Preview";
     strings.CM.Properties = "Properties";
     strings.CM.Remove = "Remove";
     strings.CM.Reposition = "Reposition";
     strings.CM.Resize = "Resize";
     strings.CM.SameWidth = "Same Width";
     strings.CM.Save = "Save";
     strings.CM.SelectAll = "Select All";
     strings.CM.SelectedColumns = "Selected columns";
     strings.CM.SelectImage = "Select Image ...";
     strings.CM.SelectNone = "Select None";
     strings.CM.SetOrder = "Set Order";
     strings.CM.SOPDropFileHint = " to upload new SOP. Click the 'Browse' button to select an existing SOP document from the database.";
     strings.CM.SortingOptions = "Sorting options";
     strings.CM.StatusFilterText = "Filter out the following statuses:";
     strings.CM.StatusSelects = "Select...";
     strings.CM.UpdateToCurrentParameterProfile = "Update to current Parameter Profile";
     /*CM endRegion*/
     /*conjunctions region*/
     strings.conjunctions = { };
     strings.conjunctions.For = "for";
     /*conjunctions endRegion*/
     /*copyToClipboard region*/
     strings.copyToClipboard = { };
     strings.copyToClipboard.copyCommandError = "An error has occured while copying to the clipboard!";
     strings.copyToClipboard.copyCommandNotSupported = "Your browser does not support the copy command";
     /*copyToClipboard endRegion*/
     /*documentManagement region*/
     strings.documentManagement = { };
     strings.documentManagement.AddNewDocumentConfirmationTitle = "Do you want to assign a new document?";
     strings.documentManagement.Assign = "Assign";
     strings.documentManagement.AssignDate = "Assign Date";
     strings.documentManagement.AssignDocument = "Assign Document";
     strings.documentManagement.AssignDocumentWindowTitle = "Assign Document to {0} in {1}";
     strings.documentManagement.AssignedBy = "Assigned by";
     strings.documentManagement.AssignmentType = "Assignment type:";
     strings.documentManagement.AssignSOPDocument = "Assign SOP Document";
     strings.documentManagement.ClickHereToDownload = "Click here to download";
     strings.documentManagement.Close = "Close";
     strings.documentManagement.Comment = "Comment";
     strings.documentManagement.CommentNotification = "Document description is required";
     strings.documentManagement.Database = "Database";
     strings.documentManagement.Document = "Document";
     strings.documentManagement.DocumentRequiredNotification = "A document is required";
     strings.documentManagement.DocumentTypeDescription = "Document Type";
     strings.documentManagement.DropFileToUpload = "Drop files here to upload";
     strings.documentManagement.File = "File";
     strings.documentManagement.FileName = "File name";
     strings.documentManagement.FileNameLong = "File name: '{0}'";
     strings.documentManagement.FileNotification = "A file is required";
     strings.documentManagement.FileOnServer = "File on server";
     strings.documentManagement.FilePath = "File path";
     strings.documentManagement.FileRequiredNotification = "A file is required";
     strings.documentManagement.FileType = "File type";
     strings.documentManagement.NoObjectSelected = "No {0} selected!";
     strings.documentManagement.NoSOPAssignedToEquipment = "No SOP Document has been assigned to Equipment '{0}'.";
     strings.documentManagement.NoSOPAssignedToMethod = "No SOP Document has been assigned to Method '{0}'.";
     strings.documentManagement.NoSOPAssignedToSample = "No SOP Document has been assigned to Sample Type '{0}' with version {1}.";
     strings.documentManagement.PreviewNotSupported = "This file type cannot be visualized in the web browser. Please download the document.";
     strings.documentManagement.RemoveConfirmation = "Are you sure you want to remove document with ShortDescription: {0}?";
     strings.documentManagement.RemoveDocument = "Remove Document";
     strings.documentManagement.RemoveSucceeded = "Document successfully removed.";
     strings.documentManagement.SOPRemoveConfirmation = "Are you sure you want to remove the assigned SOP document?";
     strings.documentManagement.StandardOperatingProcedure = "SOP";
     strings.documentManagement.TypeReason = "Type a comment...";
     strings.documentManagement.UploadFileSuccessful = "File '{0}' has been uploaded";
     strings.documentManagement.UrlRequiredNotification = "An URL is required";
     strings.documentManagement.ViewDocument = "View Document";
     /*documentManagement endRegion*/
     /*Equipments region*/
     strings.Equipments = { };
     strings.Equipments.ManuallyEntered = "Manually Entered";
     /*Equipments endRegion*/
     /*exceptions region*/
     strings.exceptions = { };
     strings.exceptions.odataExceptionMaxNodeCount = "The maximum number of filters has been exceeded.";
     /*exceptions endRegion*/
     /*general region*/
     strings.general = { };
     strings.general.DiscardCustomLaunchpad = "Your custom launchpad configuration will be removed and you will be reverted back to the system default launchpad.";
     strings.general.DiscardGlobalLaunchpad = "The launchpad configuration will be removed from the system.";
     strings.general.Disclaimer = "The license used for this system is granted to '{0}' for demo and development purposes and can therefore only be used by '{0}' employees on '{0}' owned infrastructure.";
     strings.general.Disclaimer = "The license used for this system is granted to '{0}' for demo and development purposes and can therefore only be used by '{0}' employees on '{0}' owned infrastructure.";
     strings.general.Loading = "Loading ...";
     strings.general.Loading = "Loading ...";
     /*general endRegion*/
     /*history region*/
     strings.history = { };
     strings.history.RequestsCreatedFor = "Created requests for ";
     strings.history.SamplesCreatedFor = "Created samples for ";
     strings.history.StudiesCreatedFor = "Created studies for ";
     strings.history.ValueChangedInCustomFunction = "Value changed by PostAction custom function";
     strings.history.WorksheetsCreatedFor = "Created Work Sheets for";
     /*history endRegion*/
     /*InfoFieldTypes region*/
     strings.InfoFieldTypes = { };
     strings.InfoFieldTypes.BackengLogDialog = "Choose Backend Log Date";
     strings.InfoFieldTypes.BillOfMaterial = "Bill of Material Control";
     strings.InfoFieldTypes.Button = "Button";
     strings.InfoFieldTypes.CalculatedField = "Calculated Info Field";
     strings.InfoFieldTypes.CheckBox = "CheckBox";
     strings.InfoFieldTypes.ComboBox = "Combobox";
     strings.InfoFieldTypes.ComponentList = "Component List";
     strings.InfoFieldTypes.DateTimeControl = "DateTime Control";
     strings.InfoFieldTypes.DocumentListView = "Document List View";
     strings.InfoFieldTypes.DropDownListBox = "Dropdown List";
     strings.InfoFieldTypes.EditField = "Edit Field";
     strings.InfoFieldTypes.EventManagerLogDialog = "Choose E Manager Log Date";
     strings.InfoFieldTypes.FixedText = "Fixed Textbox";
     strings.InfoFieldTypes.Image = "Image Control";
     strings.InfoFieldTypes.MultiLineEditField = "MultiLine Edit Field";
     strings.InfoFieldTypes.ParameterProfileGrid = "Parameter Profile Specifications Grid";
     strings.InfoFieldTypes.RadioButton = "Radio Button";
     strings.InfoFieldTypes.RichTextBox = "Richtextbox";
     strings.InfoFieldTypes.RndSuiteLogDialog = "Choose RnDSuite Log Date";
     strings.InfoFieldTypes.SpinBox = "Spinbox";
     strings.InfoFieldTypes.SpreadSheet = "Spread Sheet";
     strings.InfoFieldTypes.UnilinkLogDialog = "Choose Unilink Log Date";
     /*InfoFieldTypes endRegion*/
     /*IOIdentifier region*/
     strings.IOIdentifier = { };
     strings.IOIdentifier.InputIdentifier = "Input Identifier: ";
     strings.IOIdentifier.InputSource = "Input Source: ";
     strings.IOIdentifier.Method = "Method: ";
     strings.IOIdentifier.MethodNode = "MethodNode: ";
     strings.IOIdentifier.OutputIdentifier = "Output Identifier";
     strings.IOIdentifier.Parameter = "Parameter: ";
     strings.IOIdentifier.ParameterGroup = "ParameterGroup: ";
     strings.IOIdentifier.ParameterGroupNode = "ParameterGroup Node: ";
     strings.IOIdentifier.ParameterNode = "ParameterNode: ";
     /*IOIdentifier endRegion*/
     /*kendoGridMessage region*/
     strings.kendoGridMessage = { };
     strings.kendoGridMessage.Display = "{0} - {1} of {2} items";
     strings.kendoGridMessage.Empty = "No items to display";
     strings.kendoGridMessage.First = "Go to the first page";
     strings.kendoGridMessage.ItemsPerPage = "Items per page";
     strings.kendoGridMessage.Last = "Go to the last page";
     strings.kendoGridMessage.Next = "Go to the next page";
     strings.kendoGridMessage.Of = "of {0}";
     strings.kendoGridMessage.Page = "Page";
     strings.kendoGridMessage.Previous = "Go to the previous page";
     strings.kendoGridMessage.Refresh = "Refresh";
     /*kendoGridMessage endRegion*/
     /*koValidation region*/
     strings.koValidation = { };
     strings.koValidation.maxLength = " Max length {0} characters.";
     strings.koValidation.noSpacesIsAllowed = "Spaces are not allowed!";
     strings.koValidation.notUniqueRequestClass = "Not unique Request Type Class!";
     strings.koValidation.uniqueTaskTypes = " Duplicate Task Types after create!";
     /*koValidation endRegion*/
     /*listContent region*/
     strings.listContent = { };
     strings.listContent.Equipment = "Equipment Constant";
     strings.listContent.MethodProperty = "Method Property";
     strings.listContent.MethodResult = "Method Result";
     strings.listContent.ParameterResult = "Parameter Result";
     strings.listContent.SaveUndefined = "Don\'t save cell contents";
     strings.listContent.Undefined = "Don\'t propagate input to cell";
     /*listContent endRegion*/
     /*MeasurementRanges region*/
     strings.MeasurementRanges = { };
     strings.MeasurementRanges.componentLabel = "Component";
     strings.MeasurementRanges.dilutionLabel = "Dilution";
     strings.MeasurementRanges.HDtctLabel = "HDtct";
     strings.MeasurementRanges.HDtrmLabel = "HDtrm";
     strings.MeasurementRanges.LDtctLabel = "LDtct";
     strings.MeasurementRanges.LDtrmLabel = "LDtrm";
     strings.MeasurementRanges.linkedDilutionLabel = "Linked Dilution";
     strings.MeasurementRanges.sectionLabel = "Measurement Ranges";
     strings.MeasurementRanges.unitLabel = "Unit";
     /*MeasurementRanges endRegion*/
     /*Menu region*/
     strings.Menu = { };
     strings.Menu.addToFavorites = "Add To Favorites";
     strings.Menu.configureColumn = "Configure Column";
     strings.Menu.deleteColumn = "Delete Column";
     /*Menu endRegion*/
     /*messageDispatcher region*/
     strings.messageDispatcher = { };
     strings.messageDispatcher.AutoRefreshDisabled = "Too many browser tabs open. Auto refresh has been disabled!";
     strings.messageDispatcher.invalidNotificationHandlerFunction = "The provided notification handler function is not a function.";
     strings.messageDispatcher.invalidNotificationReceived = "An invalid notification has been received from the back-end system.";
     strings.messageDispatcher.invalidRequestHandlerFunction = "The provided request handler function is not a function.";
     strings.messageDispatcher.invalidRequestReceived = "An invalid request has been received from the back-end system.";
     strings.messageDispatcher.RealTimeCommunicationChannel = "We are currently experiencing difficulties with the real-time communication channel.";
     strings.messageDispatcher.RealTimeCommunicationChannelDisabled = "Real-time communication channel has been disconnected.";
     /*messageDispatcher endRegion*/
     /*methodsToWorksheetAssigner region*/
     strings.methodsToWorksheetAssigner = { };
     strings.methodsToWorksheetAssigner.GridColumnFreeSlots = "Free slots";
     strings.methodsToWorksheetAssigner.GridColumnTotalSlots = "Total slots";
     strings.methodsToWorksheetAssigner.GridColumnWorksheet = "Work Sheet";
     strings.methodsToWorksheetAssigner.GridColumnWorksheetType = "Work Sheet Type";
     strings.methodsToWorksheetAssigner.SelectWorksheetForMethodAssignment = "Select a Work Sheet to assign the selected Methods to";
     /*methodsToWorksheetAssigner endRegion*/
     /*notifiers region*/
     strings.notifiers = { };
     strings.notifiers.AddTaskKeyFailed = "Adding new task key failed ";
     strings.notifiers.AssignableRequests = "Request/GetAssignableRequests service succeeded.";
     strings.notifiers.AssignableSamples = "Request/GetAssignableSamples service succeeded.";
     strings.notifiers.ASsignmentContainsChanges = "Assignment window contains changes, do you want to save changes?";
     strings.notifiers.AssignmentSucceded = "Assignment succeeded!";
     strings.notifiers.AssignRequest = "Request/AssignRequests service succeeded.";
     strings.notifiers.AssignTestPlanNoItemSelected = "No selected item for Assign Test Plan! View will be restored on the first step";
     strings.notifiers.AttributeHeaderRequireComment = "Value for Attribute '{0}' modified. Comment is required. ";
     strings.notifiers.BarcodeScanned = "Scanned '{0}'!";
     strings.notifiers.BarcodeScannedElement = "Processing scanned element '{0}'";
     strings.notifiers.BaseQuantityCalculationError = "Can't calculate the Base Quantity, because the Bom Items are not completed correctly.";
     strings.notifiers.CacheUpdated = "</b> found on the server! The application cache was updated.";
     strings.notifiers.CalculationError = "The calculation can't be done, because the Bom Item quantities/units are not set correctly.";
     strings.notifiers.CalValueNumber = "Cost must be a number!";
     strings.notifiers.CalValuePositive = "Cost must be positive!";
     strings.notifiers.Cell = "Cell";
     strings.notifiers.ChangedKendoDataSource = "A change has been made in the kendo datasource!";
     strings.notifiers.ChangeLayout = "Change the filter results grid layout:";
     strings.notifiers.chartTypeAssigned = "The selected chart type is already assigned!";
     strings.notifiers.ChartUpdated = "Chart update succeeded";
     strings.notifiers.CommentAdded = "Comment added";
     strings.notifiers.CompletePreviousBomItemMessage = "Please complete the previously added BoM Item first, then you can add a new one.";
     strings.notifiers.CompletePrevoiusParameterMessage = "Please complete the previously added Parameter Spec Item first, then you can add a new one.";
     strings.notifiers.CompleteQuestion = "Complete Method '%1' ?";
     strings.notifiers.ComponentAlreadyAdded = "{0} has been already added to this level!";
     strings.notifiers.ComponentCannotBeMovedHere = "Component cannot be moved here!";
     strings.notifiers.ComponentCannotBeMovedToDiffLevel = "Component cannot be moved to a different level!";
     strings.notifiers.ConfGetServiceSucceeded = "Configuration/GetVersion service succeeded.";
     strings.notifiers.connectionToDbSucceded = "Connection to database succeeded!";
     strings.notifiers.Constant = "Constant";
     strings.notifiers.ConversionQuantityCalculationError = "Can't calculate the Conversion Quantity, because the Bom Items are not completed correctly.";
     strings.notifiers.createBeforePaging = "Please create the selected Sample(s) before before continuing.";
     strings.notifiers.Created = "Created ";
     strings.notifiers.CreatedEnquiry = "Created enquiry  %1";
     strings.notifiers.CreatedObjects = "%1 %2s were created";
     strings.notifiers.CreatedRequest = "Created request %1.";
     strings.notifiers.CreatedSample = "Created sample %1.";
     strings.notifiers.CreatedSpecification = "Created specification %1.";
     strings.notifiers.CreatedStudy = "Created study %1.";
     strings.notifiers.CreatedWithID = "{0} created with ID: {1}";
     strings.notifiers.CreatedWorksheet = "Created Work Sheet %1.";
     strings.notifiers.CustomFunctionActionBar = "Custom function from action bar invocation failed!";
     strings.notifiers.CustomFunctionInvocation = "Custom function '{0}' invocation finished.";
     strings.notifiers.DeleteInfoCardMessage = "Are you sure, you want to delete this infocard?";
     strings.notifiers.DeleteWidget = "Delete widget from launchpad";
     strings.notifiers.DeleteWidgetSidePanel = "Permanently delete widget";
     strings.notifiers.DocumentAssignmentSucceded = "Document assignment succeeded!";
     strings.notifiers.documentNotVisible = "The added document is not visible because it does not fulfill the filter criteria.";
     strings.notifiers.DocumentUpdateSuccess = "Document update succeeded!";
     strings.notifiers.DocumentUploadSuccess = "Document upload succeeded!";
     strings.notifiers.docUploadConfirmation = "The file %1 is greater than 1MB! Continue?";
     strings.notifiers.downloadingMethodSheetFailed = "Downloading method sheet has failed!";
     strings.notifiers.editableItemExists = "There is already an editable version created.</br>Would you like to use it?";
     strings.notifiers.ElementRemove = "Removal of element succeeded!";
     strings.notifiers.EnquiryInfoCardAdded = "Enquiry Info card added successfully!";
     strings.notifiers.EnquiryUpdated = "Enquiry update succeeded";
     strings.notifiers.EntitiesCreated = "Entities created";
     strings.notifiers.EquipmentAssignedToItself = "The '%1' Equipment can't be assigned to itself!";
     strings.notifiers.EquipmentCannotBeAssigned = "Equipment %1 cannot be assigned to %2 %3 '%4'";
     strings.notifiers.EquipmentInterventionStartFailed = "Starting manual Equipment Intervention failed!";
     strings.notifiers.EquipmentInterventionStartSucceeded = "Manual Intervention started!";
     strings.notifiers.EquipmentReAssigned = "The '%1' Equipment can't be assigned more than once!";
     strings.notifiers.EquipmentUpdated = "Equipment update succeeded!";
     strings.notifiers.ErrorDownloading = "An error has occured while downloading the elements!";
     strings.notifiers.ErrorOccured = "An error has occured! ";
     strings.notifiers.ErrorReason = "Error retrieving data. Reason: ";
     strings.notifiers.ErrorRetrieveCurrentTask = "Error retrieving current task!";
     strings.notifiers.ErrorwhileDownloadingTaskTypes = "Error while downloading task types";
     strings.notifiers.ErrorwhileSearchingVersion = "Error while searching for editable version";
     strings.notifiers.FailedCreation = "Creation failed!";
     strings.notifiers.FailedRequestedConfPage = "Failed to identify the requested configuration page!";
     strings.notifiers.FailedUpdate = "Update failed!";
     strings.notifiers.FavoriteItemAlreadyAdded = "Favorite Item Already Added";
     strings.notifiers.fileAlreadyUploadedConfirmation = "There is a document already uploaded to the server with the file name below. Are you sure you want to continue?";
     strings.notifiers.FileFormat = "File format:";
     strings.notifiers.fileSizeConfirmation = "The size of the file below is greater than 1 MB! Are you sure you want to upload it?";
     strings.notifiers.FillMandatoryFields = "Please fill in the following mandatory search fields: {0}.";
     strings.notifiers.Filter = "Filter...";
     strings.notifiers.FormatSetToNonLocalizable = "Default values can not be translated. Translations will be removed after save.";
     strings.notifiers.FormatValueNotValid = "The entered value is not valid for the used format.";
     strings.notifiers.FormulaParsingFailed = "formula parsing failed. Please check formula and all inputs.";
     strings.notifiers.FunctionExecuted = "Function was successfully executed.";
     strings.notifiers.GetGroupKeyList = "/GetGroupKeyList";
     strings.notifiers.groupKeySigleAssignement = "The group key %1 can not be assigned multiple times.";
     strings.notifiers.groupKeySigleValue = "The group key %1 can not have more than one value.";
     strings.notifiers.hasRequestTemplates = "There are Request Templates of this Request Class Type!";
     strings.notifiers.IEAlert = "You are using an unsupported version of Internet Explorer. Please upgrade Internet Explorer.";
     strings.notifiers.IncorrectFilter = "Error in filter:";
     strings.notifiers.InfoCardDeleteFailed = "Info card delete failed!";
     strings.notifiers.InfoCardUpdated = "Info card updated successfully";
     strings.notifiers.InfoFieldHeaderRequireComment = "Value for Info Field '{0}' modified. Comment is required. ";
     strings.notifiers.InfoFieldLookUpFormat = "Info field is configured with lookup format. Cannot use fixed list or sql statement.";
     strings.notifiers.InterventionInvalidated = "Intervention invalidated successfully!";
     strings.notifiers.InterventionReAssigned = "The Intervention %1 can't be assigned more than once!";
     strings.notifiers.InterventionValidated = "Intervention validated successfully!";
     strings.notifiers.InvalidIdentifierInFormula = "No cell or custom function with name [{0}]";
     strings.notifiers.InvalidLookupIdentifier = "Invalid or non existent lookup identifier.";
     strings.notifiers.InvalidMethodCellCalculation = "Characters are not allowed in methodcell calculation";
     strings.notifiers.InvalidSelectedItem = "The select item is invalid. Please select a new one.";
     strings.notifiers.IsMakeUpMaterial = "Cannot modify quantity of make-up material...";
     strings.notifiers.LaunchpadAsDefault = "Launchpad saved as default!";
     strings.notifiers.LaunchpadAssigned = "Launchpad successfully assigned!";
     strings.notifiers.LaunchpadCreated = "Launchpad successfully created!";
     strings.notifiers.LaunchpadRemoved = "Launchpad successfully deleted!";
     strings.notifiers.LaunchpadUpdated = "Launchpad successfully updated!";
     strings.notifiers.LayoutColumnIsPlaceholder = "This is a placeholder column, not present in the actual layout.";
     strings.notifiers.LoadAllNotyButtonText = "Load All";
     strings.notifiers.LoadEquipmentConstants = "Load equipment constants of %1 for %2?";
     strings.notifiers.LoadEquipmentConstants = "Update equipment constants of %1 for %2";
     strings.notifiers.LoadToSelectedCellNotyButtonText = "Load Selected Cell";
     strings.notifiers.LoadToSelectedMethodNotyButtonText = "Load Selected Method";
     strings.notifiers.loseChangesOnNavigation = "If you leave the page your changes will be lost!";
     strings.notifiers.makeSelection = "Select...";
     strings.notifiers.makeUpMaterial = "Cannot set material as makeup material";
     strings.notifiers.MaterialCreated = "Material created";
     strings.notifiers.MaterialUpdated = "Material update succeeded";
     strings.notifiers.MaterialValueIsRequired = "Material number is required!";
     strings.notifiers.MaximumQuantityError = "The Maximum quantity should be greater than or equal to the base quantity.";
     strings.notifiers.MethodCellCalculation = "Calculation failed on Method Cell [{0}]";
     strings.notifiers.MethodCellCreated = "Method Cells for Method {0} created!";
     strings.notifiers.MethodCellHeaderRequireComment = "Value for Cell '{0}' modified. Comment is required. ";
     strings.notifiers.MethodcellLookUpFormat = "Method cell is configured with lookup format. Cannot use fixed list or sql statement.";
     strings.notifiers.MethodCells = "method cells";
     strings.notifiers.methodCellsSaved = "MethodCells successfully saved.";
     strings.notifiers.methodReanalysed = "Method has been successfully reanalyzed!";
     strings.notifiers.methodReanalysisFail = "Parameter has not been reanalyzed!";
     strings.notifiers.methodsSaved = "Methods successfully saved.";
     strings.notifiers.MinimumQuantityError = "The Minimum quantity should be less than or equal to the base quantity.";
     strings.notifiers.ModifiedSoYouShouldRefresh = "The current selection has been modified by another user. You should refresh.";
     strings.notifiers.MultipleAssignmnetNotSupported = "List configured to support only one assigned element";
     strings.notifiers.MultipleSampleCreation = "Creating multiple Samples using 'Create and Continue' is not possible";
     strings.notifiers.NavigationNode = "Navigation node not found!";
     strings.notifiers.NewValue = "NewValue";
     strings.notifiers.NewVersion = "New version <b>";
     strings.notifiers.NoAccesRightsAssigned = "No access right of type 'Write' assigned.";
     strings.notifiers.NoAllergensConfigured = "No Allergens configured ...";
     strings.notifiers.NoAllergensSelected = "No Allergens selected ...";
     strings.notifiers.NoAssignableSamples = "No assignable samples for the selected request!";
     strings.notifiers.NoAvailableColumnItemTypes = " There are no columns available to assign with the selected column item type!";
     strings.notifiers.NoAvailableColumns = " There are no columns available to assign with the selected column item type!";
     strings.notifiers.NoAvailableColumns = " There are no columns available to assign with the adequate filter!";
     strings.notifiers.NoBomHeaderToUnit = "Can't perform any calculations because the Bom header to unit is not set!";
     strings.notifiers.NoBomHeaderUnit = "Can't perform any calculations because the Bom header unit is not set!";
     strings.notifiers.NoContext = "No Context";
     strings.notifiers.noDateSelected = "You must choose a start date!";
     strings.notifiers.NoEquipmentSelected = "No Equipment selected for %3: '%2' %1";
     strings.notifiers.NoItemsSelected = "No items selected!";
     strings.notifiers.NoLayoutDefined = "No Layout defined for layout type: {0}";
     strings.notifiers.NoLayoutPrefDefined = "Preferred layout for task type '{0}' was not found!";
     strings.notifiers.NoLayoutToDisplay = "No Layout to display!";
     strings.notifiers.NoLicense = "You have no license available";
     strings.notifiers.NoNotyButtonText = "No";
     strings.notifiers.NoParameterGroupAvailable = "There are no parameter groups available.";
     strings.notifiers.NoPreferenceForTaskType = "No preferences for task type '{0}'";
     strings.notifiers.NoRequestSelected = "No request selected.";
     strings.notifiers.NoRequestSpecified = "No request id selected. The Pivot Table cannot be populated.";
     strings.notifiers.NoResultsFound = "No results found.";
     strings.notifiers.NoSampleSelected = "No sample selected";
     strings.notifiers.NoSuchEntity = "No such entity.";
     strings.notifiers.NotAccessible = "{0}Configuration/GetVersion is not accessible";
     strings.notifiers.NotAllowedRemoveUserProfiles = "It is not allowed to remove all the User Profiles !";
     strings.notifiers.NotASample = "Selected item is not a Sample!";
     strings.notifiers.NotImplemented = "Not implemented!";
     strings.notifiers.NoUserTaskPreferenceDefined = "No user task preference defined!";
     strings.notifiers.NoWidgetsAvailable = "No other widgets available";
     strings.notifiers.NutritionalExplosionIsInvalid = "Error: Nutritional Calculation performed on incomplete BoM!";
     strings.notifiers.ObjectRemoved = "{0} was removed successfully!";
     strings.notifiers.ObjectsAssigned = "{0} assigned successfully!";
     strings.notifiers.ObjectTypeNotRecognized = "ObjectType not recognized";
     strings.notifiers.ParameterDefinition = "Parameter Definitions (TODO) service succeeded.";
     strings.notifiers.parameterReanalysed = "Parameter has been reanalyzed!";
     strings.notifiers.parameterRenalysis = "Parameter has not been reanalyzed!";
     strings.notifiers.ParameterSpecComplete = "Please complete the previously added Parameter Spec Item first, then you can add a new one.";
     strings.notifiers.PivotTable = "Pivot Table";
     strings.notifiers.pivotTableChangesCancelled = "Pivot table changes canceled!";
     strings.notifiers.PivotTableHeaderForAttributesOverlay = "Additional information for the selected parameter";
     strings.notifiers.PivotTableSaved = "Pivot table successfully saved!";
     strings.notifiers.PivotTableSaveFailed = "Pivot table save failed!";
     strings.notifiers.PlannedEffectiveDateCanNotBeSet = "The Planned Effective date cannot be set before today!";
     strings.notifiers.PlantChangeFailed = "The 'plant' can not be changed, because the BoM header has BoM items assigned.";
     strings.notifiers.PostCalcRunning = "PostCalc function is being executed. Do you want to abort it and lose your changes?";
     strings.notifiers.PriceCreated = "Price created";
     strings.notifiers.PriceUpdated = "Price update succeeded!";
     strings.notifiers.ReanalysisFailed = "Cannot reanalyse selected object!";
     strings.notifiers.ReanalysisObject = "No object selected for Reanalysis!";
     strings.notifiers.ReanalysisRequireComment = "Reanalysis {0} requires comment";
     strings.notifiers.RemoveMethodFromWorkSheet = "Are you sure you want to remove Method: '{0}' in Sample: '{1}' of Work Sheet: '{2}'?";
     strings.notifiers.RequestHeaderDownloadFailed = "Failed to download request custom header!";
     strings.notifiers.RequestInfoCardAdded = "Request Info card added successfully!";
     strings.notifiers.RequestInfoCardDeleteFailed = "Request Info card delete failed!";
     strings.notifiers.RequestInfoCardDeleteSucceeded = "Request Info card delete succeeded!";
     strings.notifiers.RequestOrAssignSampleService = "Request/AssignSamples service succeeded.";
     strings.notifiers.RequestOrGetAssignableSamplesService = "Request/GetAssignableSamples service succeeded.";
     strings.notifiers.requestsUpdated = "Request list update succeeded!";
     strings.notifiers.RequestTypeAssignedToItself = "The '%1' Request type can't be assigned to itself!";
     strings.notifiers.RequestTypeReAssigned = "The '%1' Request Type can't be assigned more than once!";
     strings.notifiers.RequestUpdateSucceded = "Request update succeeded!";
     strings.notifiers.RequiredTimeNumber = "Required time must be a number!";
     strings.notifiers.RequiredTimePositive = "Required time must be positive!";
     strings.notifiers.ResultValidation = "Result Validation Grid";
     strings.notifiers.RetreiveFromServerExepction = "Error retrieving data from the server. Error message: ";
     strings.notifiers.RetreiveTaskException = "Could not retrieve task from %1";
     strings.notifiers.RnDSuiteGridHeaderDownloadFailed = "An error occurred while downloading the header of the grid!";
     strings.notifiers.RqSupposedToFail = "ThisRequestIsSupposedToFail";
     strings.notifiers.RqUpdateSucceededlOpenRq = "Request update succeeded!";
     strings.notifiers.SampleInfoCardAdded = "Sample Info card added successfully!";
     strings.notifiers.SampleInfoCardDeleteFailed = "Sample Info card delete failed!";
     strings.notifiers.SampleInfoCardDeleteSucceeded = "Sample Info card delete succeeded!";
     strings.notifiers.sampleInfoCardsUpdated = "Sample info cards update succeeded!";
     strings.notifiers.sampleSaved = "Sample successfully saved.";
     strings.notifiers.samplesUpdated = "Sample list update succeeded!";
     strings.notifiers.sampleUpdated = "Sample update succeeded!";
     strings.notifiers.saveBeforePaging = "Please save modified data before continuing.";
     strings.notifiers.saveChangesNoty = "%1 has been modified. Do you want to save changes?";
     strings.notifiers.SaveChangesPopUpMessage = " contains changes, do you want to save changes?";
     strings.notifiers.saveChangesQuestion = "Do you want to save changes?";
     strings.notifiers.saveChangesRequestTemplate = "Continuing will remove all SampleType links. Do you want to save changes?";
     strings.notifiers.saveChangesSampleType = "Continuing will remove all ParameterProfile links. Do you want to save changes?";
     strings.notifiers.SaveOperation = "Save operation stopped!";
     strings.notifiers.SaveToSpecificationError = "Save to Specification failed!";
     strings.notifiers.SaveToSpecificationInfo = "Save to Specification completed successfully.";
     strings.notifiers.ScannedSampleNoMethodsAssigned = "The scanned sample has no methods assigned !";
     strings.notifiers.ScanningDisabled = "No task found! Scanning is disabled.";
     strings.notifiers.ScUpdateSucceededOpenRq = "Sample update succeeded!";
     strings.notifiers.SelectComment = "Select a comment...";
     strings.notifiers.selectedMaterial = "Selected Material...";
     strings.notifiers.SelectedMtHasNoProperties = "The selected method has no properties available.";
     strings.notifiers.SelectedPaHasNoMethod = "The selected parameter has no methods.";
     strings.notifiers.SelectedPgHasNoParameter = "The selected parameter group has no parameters.";
     strings.notifiers.SelectedStHasNoMethodDefinition = "The sample type %1 has no active method definitions.";
     strings.notifiers.SelectItem = "Select item...";
     strings.notifiers.SelectorDragAndDropFiles = "Select or drag and drop files below:";
     strings.notifiers.SelectValue = "Select value...";
     strings.notifiers.ServiceSucceeded = " service succeeded.";
     strings.notifiers.ShortcutOutdated = "Shortcut based on an outdated task version!";
     strings.notifiers.ShortcutSaved = "Shortcut succesfully saved!";
     strings.notifiers.ShowOptions = "View widget options";
     strings.notifiers.SidePanelNotConfiguredProperly = "Side panel not configured properly!";
     strings.notifiers.SortingNotSupported = "This Layout Type does not support data sorting!";
     strings.notifiers.SpecificationDescriptionIsRequired = "Specification description is required!";
     strings.notifiers.SpecificationInfoCardAdded = "Specification Info card added successfully!";
     strings.notifiers.SpecificationInfoCardDeleteFailed = "Specification Info card delete failed!";
     strings.notifiers.SpecificationInfoCardDeleteSucceeded = "Specification Info card delete succeeded!";
     strings.notifiers.specificationsUpdated = "Specification list update succeeded!";
     strings.notifiers.SpecificationUpdated = "Specification update succeeded";
     strings.notifiers.StatusActive = "Status changed to active!";
     strings.notifiers.StatusChangeFail = "Status change failed!";
     strings.notifiers.StatusChangeNoTransitionFound = "No transition found, try again later!";
     strings.notifiers.StatusChangePartialSucces = "Status change on some elements were successful!";
     strings.notifiers.StatusChangeSuccess = "Status change succeeded!";
     strings.notifiers.StatusHistoric = "Status changed to historic!";
     strings.notifiers.SucceededCreation = "Creation succeeded!";
     strings.notifiers.SucceededUpdate = "Update succeeded!";
     strings.notifiers.SwitchToNonHierarchy = "You will lose the hierarchy, are you sure you want to continue?";
     strings.notifiers.SynchronizationError = "An error has occured while checking if synchronization is needed!";
     strings.notifiers.TaskDefinitionNotFound = "No task definition has been found for: {0}";
     strings.notifiers.TypeComment = "Type a comment...";
     strings.notifiers.UnableToConnectWithBackendHub = "Cannot establish a connection with the Backend Hub: ";
     strings.notifiers.UnableToConnectWithEvntMgrHub = "Cannot establish a connection with the EventManager Hub: ";
     strings.notifiers.UnableToSetDataSource = "Could not set datasource of pivot table for row ";
     strings.notifiers.Unauthorized = "Unauthorized";
     strings.notifiers.UnpinWidget = "Unpin widget from launchpad";
     strings.notifiers.UnsavedChanges = "There are unsaved changes, do you want to save them?";
     strings.notifiers.UnsavedChangesConfirmComplete = "Would you like to save changes and complete the method?";
     strings.notifiers.UnsavedChangesMethodSheet = "There are unsaved changes in the methodsheet. Do you want to save changes?";
     strings.notifiers.UnsavedChangesWhenContinue = "There are unsaved changes, if you continue the changes will be lost.";
     strings.notifiers.UpdateAllNotyButtonText = "Update all";
     strings.notifiers.UpdateEquipmentConstants = "Constants changed in %1. Update constant values?";
     strings.notifiers.UsageChangedFailed = "The 'usage' can not be changed, because the BoM header has BoM items assigned.";
     strings.notifiers.UserAlreadyAssigned = "User has been already assigned: {0}";
     strings.notifiers.userChangesInNewElement = "Your changes will be applied only on the new element.</br>Would you like to continue?";
     strings.notifiers.UserNameRequired = "The UserName field is required.";
     strings.notifiers.UserProfilesDownload = "Failed to download the User Profiles!";
     strings.notifiers.ValidationFailed = "Can't save. Validation failed";
     strings.notifiers.ValidationFunctionNotExecuted = "The validation function was not executed or returned nothing !";
     strings.notifiers.ValidationNoMeetRequiredContract = "Object returned from validation did not meet the required contract! (needed property names are: {0}, {1} and {2})";
     strings.notifiers.Warning = "Warning";
     strings.notifiers.WhiteSpacesRemoved = "Extra white spaces were removed from the '{0}' field!";
     strings.notifiers.WhiteSpacesRemoved = "Extra white spaces were removed from the '{0}' field!";
     strings.notifiers.WidgetDeleted = "Widget successfully deleted!";
     strings.notifiers.WorksheetCompletedFailed = "Work Sheet completion failed!";
     strings.notifiers.WorksheetCompletedSucceded = "Work Sheet completed!";
     strings.notifiers.WorksheetDetailsReadFailed = "Reading Work Sheet details has failed!";
     strings.notifiers.WorksheetDetailsSaved = "Work Sheet details successfully saved!";
     strings.notifiers.WorksheetDetailsSaveFailed = "Work Sheet details save failed!";
     strings.notifiers.WorksheetInfoCardAdded = "Work Sheet Info card added successfully!";
     strings.notifiers.WorksheetInfoCardDeleteFailed = "Work Sheet Info card delete failed!";
     strings.notifiers.WorksheetInfoCardDeleteSucceeded = "Work Sheet Info card delete succeeded!";
     strings.notifiers.WorksheetListEmpty = "No Work Sheets available for assignment";
     strings.notifiers.WorksheetMethodAssignmentSucceded = "Method assignment succeeded!";
     strings.notifiers.WorksheetMethodRemovalFailed = "An error occurred during the Method removal!";
     strings.notifiers.WorksheetMethodRemovalSucceded = "Method has been successfully removed!";
     strings.notifiers.worksheetsUpdated = "Work sheet list update succeeded!";
     strings.notifiers.WorksheetTypeListEmpty = "No Work Sheet Types available for assignment";
     strings.notifiers.WorksheetUpdateSucceded = "Work sheet update succeeded!";
     strings.notifiers.WorkspaceDelete = "Delete Workspace failed!";
     strings.notifiers.WorkspaceElementAlreadyAdded = "This object is already added to the workspace!";
     strings.notifiers.WorkspaceElementAlreadyRemoved = "This object is already removed from the workspace!";
     strings.notifiers.WorkspaceErrorReactivate = "An error has occured while reactivating the Workspace!";
     strings.notifiers.WorkspaceErrorRemove = "An error has occured while removing the Workspace!";
     strings.notifiers.WorkspaceReactivated = "Workspace successfully reactivated!";
     strings.notifiers.WorkspaceReactivateFailed = "Reactivate Workspace failed!";
     strings.notifiers.WorkspaceRemove = "Workspace successfully removed!";
     strings.notifiers.WrongFormat = "Wrong format!";
     /*notifiers endRegion*/
     /*objectTypes region*/
     strings.objectTypes = { };
     strings.objectTypes.Allergen = "Allergen";
     strings.objectTypes.Allergens = "Allergens";
     strings.objectTypes.Attribute = "Attribute";
     strings.objectTypes.Attributes = "Attributes";
     strings.objectTypes.Charts = "Charts";
     strings.objectTypes.ChartType = "Chart Type";
     strings.objectTypes.ChartTypes = "Chart Types";
     strings.objectTypes.Component = "Component";
     strings.objectTypes.Components = "Components";
     strings.objectTypes.Condition = "Condition";
     strings.objectTypes.Conditions = "Conditions";
     strings.objectTypes.ConditionSet = "ConditionSet";
     strings.objectTypes.ConditionSets = "ConditionSets";
     strings.objectTypes.Contact = "Contact";
     strings.objectTypes.Contacts = "Contacts";
     strings.objectTypes.Equipment = "Equipment";
     strings.objectTypes.Equipments = "Equipments";
     strings.objectTypes.EquipmentType = "Equipment Type";
     strings.objectTypes.EquipmentTypes = "Equipment Types";
     strings.objectTypes.FAR = "FAR";
     strings.objectTypes.FARs = "FARs";
     strings.objectTypes.Frame = "Frame";
     strings.objectTypes.Frames = "Frames";
     strings.objectTypes.GenericPriceObject = "Generic";
     strings.objectTypes.InfoCard = "Info Card";
     strings.objectTypes.InfoCards = "Info Cards";
     strings.objectTypes.InfoField = "Info Field";
     strings.objectTypes.InfoFieldDefinition = "Info Field Definition";
     strings.objectTypes.InfoFieldDefinitions = "Info Field Definitions";
     strings.objectTypes.InfoFields = "Info Fields";
     strings.objectTypes.InfoProfile = "Info Profile";
     strings.objectTypes.InfoProfiles = "Info Profiles";
     strings.objectTypes.Intervention = "Intervention";
     strings.objectTypes.Interventions = "Interventions";
     strings.objectTypes.Layout = "Layout";
     strings.objectTypes.LayoutDefinition = "Layout";
     strings.objectTypes.LayoutDefinitions = "Layouts";
     strings.objectTypes.LayoutType = "Layout";
     strings.objectTypes.LayoutTypes = "Layouts";
     strings.objectTypes.Location = "Location";
     strings.objectTypes.Locations = "Locations";
     strings.objectTypes.LocationType = "Location Type";
     strings.objectTypes.LocationTypes = "Location Types";
     strings.objectTypes.Material = "Material";
     strings.objectTypes.Method = "Method";
     strings.objectTypes.MethodCell = "Method Cell";
     strings.objectTypes.MethodCells = "Method Cells";
     strings.objectTypes.MethodDefinition = "Method Definition";
     strings.objectTypes.MethodDefinitions = "Method Definitions";
     strings.objectTypes.Methods = "Methods";
     strings.objectTypes.Parameter = "Parameter";
     strings.objectTypes.ParameterDefinition = "Parameter Definition";
     strings.objectTypes.ParameterDefinitions = "Parameter Definitions";
     strings.objectTypes.ParameterGroup = "Parameter Group";
     strings.objectTypes.ParameterGroups = "Parameter Groups";
     strings.objectTypes.ParameterProfile = "Parameter Profile";
     strings.objectTypes.ParameterProfiles = "Parameter Profiles";
     strings.objectTypes.Parameters = "Parameters";
     strings.objectTypes.Preference = "Preference";
     strings.objectTypes.Preferences = "Preferences";
     strings.objectTypes.Price = "Price";
     strings.objectTypes.Project = "Project";
     strings.objectTypes.Regulation = "Regulation";
     strings.objectTypes.Regulations = "Regulations";
     strings.objectTypes.Request = "Request";
     strings.objectTypes.RequestClasses = "Request Classes";
     strings.objectTypes.RequestInfoCard = "Request Info Card";
     strings.objectTypes.Requests = "Requests";
     strings.objectTypes.RequestTemplate = "Request Type";
     strings.objectTypes.RequestTemplates = "Request Types";
     strings.objectTypes.RequestType = "Request Type";
     strings.objectTypes.RequestTypeClass = "Request Type Class";
     strings.objectTypes.Sample = "Sample";
     strings.objectTypes.SampleInfoCard = "Sample Info Card";
     strings.objectTypes.Samples = "Samples";
     strings.objectTypes.SampleType = "Sample Type";
     strings.objectTypes.SampleTypes = "Sample Types";
     strings.objectTypes.Specification = "Specification";
     strings.objectTypes.SpecificationComponent = "Component";
     strings.objectTypes.SpecificationComponents = "Components";
     strings.objectTypes.SpecificationInfoCard = "Specification Info Card";
     strings.objectTypes.SpecificationType = "Specification Type";
     strings.objectTypes.SpecificationTypes = "Specification Types";
     strings.objectTypes.Study = "Study";
     strings.objectTypes.Studys = "Studies";
     strings.objectTypes.Synonym = "Synonym";
     strings.objectTypes.Synonyms = "Synonyms";
     strings.objectTypes.TaskDefinition = "Task";
     strings.objectTypes.TaskDefinitions = "Tasks";
     strings.objectTypes.User = "User";
     strings.objectTypes.UserProfile = "User Profile";
     strings.objectTypes.UserProfiles = "User Profiles";
     strings.objectTypes.Users = "Users";
     strings.objectTypes.Workspace = "Workspace";
     strings.objectTypes.Workspaces = "Workspaces";
     /*objectTypes endRegion*/
     /*PaAlarm region*/
     strings.PaAlarm = { };
     strings.PaAlarm.LimitRangesWarning = "The results for '{0}' is out of {1} range ({2}).";
     /*PaAlarm endRegion*/
     /*pageTitles region*/
     strings.pageTitles = { };
     strings.pageTitles.addToFavorites = "Add to Favorites";
     strings.pageTitles.approveSpecificationStepOne = "Approve Specification Wizard - Filter Criteria";
     strings.pageTitles.approveSpecificationStepTwo = "Approve Specification Wizard - Filter Results";
     strings.pageTitles.configurationModule = "Configuration Module";
     strings.pageTitles.createEnquiryStepOne = "Create Enquiry Wizard";
     strings.pageTitles.createRequestStepOne = "Create {0} Wizard - Filter Criteria";
     strings.pageTitles.createRequestStepThree = "Create {0} Wizard - Details";
     strings.pageTitles.createRequestStepTwo = "Create {0} Wizard - Filter Results";
     strings.pageTitles.createSampleStepOne = "Create Sample Wizard - Filter Criteria";
     strings.pageTitles.createSampleStepThree = "Create Sample Wizard - Sample Details";
     strings.pageTitles.createSampleStepTwo = "Create Sample Wizard - Filter Results";
     strings.pageTitles.createSpecificationStepOne = "Create Specification Wizard";
     strings.pageTitles.createSpecificationStepThree = "Create Specification Wizard - Sample Details";
     strings.pageTitles.createSpecificationStepTwo = "Create Specification Wizard - Filter Results";
     strings.pageTitles.createStudyStepOne = "Create Study Wizard - Filter Criteria";
     strings.pageTitles.createStudyStepTwo = "Create Study Wizard - Filter Results";
     strings.pageTitles.createWorksheetStepOne = "Create Work Sheet Wizard - Filter Criteria";
     strings.pageTitles.createWorksheetStepThree = "Create Work Sheet Wizard - Work Sheet Details";
     strings.pageTitles.createWorksheetStepTwo = "Create Work Sheet Wizard - Filter Results";
     strings.pageTitles.DocumentsStepOne = "Documents Wizard - Filter Criteria";
     strings.pageTitles.DocumentsStepThree = "Documents Wizard - Request Details";
     strings.pageTitles.DocumentsStepTwo = "Documents Wizard - Filter Results";
     strings.pageTitles.editInfoProfile = "Edit Info Profile";
     strings.pageTitles.frontendChangesTracker = "Changed frontend files";
     strings.pageTitles.maintainMaterialStepOne = "Maintain Material Wizard - Filter Criteria";
     strings.pageTitles.maintainMaterialStepTwo = "Maintain Material Wizard - Filter Results";
     strings.pageTitles.openChartStepOne = "Open Chart Wizard - Filter Criteria";
     strings.pageTitles.openChartStepTwo = "Open Chart Wizard - Filter Results";
     strings.pageTitles.openEnquiryStepOne = "Open Enquiry Wizard - Filter Criteria";
     strings.pageTitles.openEnquiryStepTwo = "Open Enquiry Wizard - Filter Results";
     strings.pageTitles.openEquipmentStepOne = "Open Equipment Wizard - Filter Criteria";
     strings.pageTitles.openEquipmentStepTwo = "Open Equipment Wizard - Filter Results";
     strings.pageTitles.openRequestStepOne = "Open {0} Wizard - Filter Criteria";
     strings.pageTitles.openRequestStepThree = "Open {0} Wizard - Details";
     strings.pageTitles.openRequestStepTwo = "Open {0} Wizard - Filter Results";
     strings.pageTitles.openSampleStepOne = "Open Sample Wizard - Filter Criteria";
     strings.pageTitles.openSampleStepTwo = "Open Sample Wizard - Filter Results";
     strings.pageTitles.openSpecificationStepOne = "Open Specification Wizard - Filter Criteria";
     strings.pageTitles.openSpecificationStepTwo = "Open Specification Wizard - Filter Results";
     strings.pageTitles.openStudyStepOne = "Open Stability Study Wizard - Filter Criteria";
     strings.pageTitles.openStudyStepTwo = "Open Stability Study Wizard - Filter Results";
     strings.pageTitles.openWorklistStepOne = "Open Work List Wizard - Filter Criteria";
     strings.pageTitles.openWorklistStepTwo = "Open Work List Wizard - Filter Results";
     strings.pageTitles.openWorksheetStepOne = "Open Work Sheet Wizard - Filter Criteria";
     strings.pageTitles.openWorksheetStepThree = "Open Work Sheet Wizard - Details";
     strings.pageTitles.openWorksheetStepTwo = "Open Work Sheet Wizard - Filter Results";
     strings.pageTitles.priceBookStepOne = "Pricebook - Filter Criteria";
     strings.pageTitles.priceBookStepTwo = "Pricebook";
     strings.pageTitles.selectComponent = "Select Component";
     strings.pageTitles.SelectParameter = "Select Parameter";
     strings.pageTitles.selectRequest = "Select Request";
     strings.pageTitles.selectSample = "Select Sample";
     /*pageTitles endRegion*/
     /*partialViews region*/
     strings.partialViews = { };
     strings.partialViews.BomItem = "BoM Item";
     strings.partialViews.ConfParameter = "Parameter/GetMethodDefinitions for sample id";
     strings.partialViews.ConfParameterDef = "MethodDefinitions/GetMethodDefinitions for sample id";
     strings.partialViews.ConfParameterGr = "ParameterGroup/GetParameterDefinitions for sample id";
     strings.partialViews.ConfParameterProf = "ParameterDefinition/GetParameterDefinitions for sample id";
     strings.partialViews.ConfSample = "ParameterGroup/GetMixedParameterProfiles for sample id";
     strings.partialViews.Layouts = "Layouts";
     strings.partialViews.NoAttributesText = "No attributes to display!";
     strings.partialViews.NoChartText = "No chart to display!";
     strings.partialViews.NoChartTypesText = "No chart types to display!";
     strings.partialViews.NoConditionsText = "No conditions to display!";
     strings.partialViews.NoDetailedPropertiesText = "No detailed properties to display!";
     strings.partialViews.NoDocumentsText = "No documents to display!";
     strings.partialViews.NoEquipmentConstantsText = "No equipment constants to display!";
     strings.partialViews.NoEquipmentTypesText = "No equipment types to display!";
     strings.partialViews.NoGroupKeysText = "No group keys to display!";
     strings.partialViews.NoInfoFieldLayoutsText = "No Layouts to display!";
     strings.partialViews.NoMeasurementRangesText = "No measurement ranges to display!";
     strings.partialViews.NoPlantText = "No plants to display!";
     strings.partialViews.NoRequestClassHierarchyText = "No request class hierarchy to display!";
     strings.partialViews.NoStylePropertiesText = "No style properties to display!";
     strings.partialViews.OpParameter = "Parameter/GetMethods for sample id";
     strings.partialViews.OpParameterGr = "ParameterGroup/GetParameters for sample id";
     strings.partialViews.OpSample = "Sample/GetParameterGroups for sample id";
     strings.partialViews.Pa = "Parameter";
     strings.partialViews.Pg = "Parameter Group ";
     /*partialViews endRegion*/
     /*Properties region*/
     strings.Properties = { };
     strings.Properties.Access = "Access";
     strings.Properties.AccessRights = "Access Rights";
     strings.Properties.ActiveDirectory = "Active Directory";
     strings.Properties.ActualExecutor = "Actual Executor";
     strings.Properties.Add = "Add";
     strings.Properties.AddExistingDocument = " Add existing document";
     strings.Properties.AdditionalAllergens = "Additional Allergens";
     strings.Properties.AddLowerLevel = "Add lower level";
     strings.Properties.AddNewComponent = " Add component";
     strings.Properties.AddNewLowerLevel = " Add lower level";
     strings.Properties.AddNewRow = " Add new row";
     strings.Properties.AddSampleTypeParameterProfile = "Add sample type parameter profiles";
     strings.Properties.Alarm = "Alarm";
     strings.Properties.AlarmHandlingOrder = "Alarm handling order";
     strings.Properties.Alignment = "Alignment";
     strings.Properties.AllowAnyInfoProfile = "Allow any info profile";
     strings.Properties.AllowAnySampleType = "Allow any sample type";
     strings.Properties.Alternative = "Alt";
     strings.Properties.Amount = "Amount";
     strings.Properties.Any = "Any";
     strings.Properties.ApplicationUser = "Application User";
     strings.Properties.ApproverUserProfile = "Approver User Profile";
     strings.Properties.Ascending = "Ascending";
     strings.Properties.AssignAnyMethod = "Assign any method";
     strings.Properties.AssignAnyParameter = "Assign any parameter";
     strings.Properties.AssignAnyParameterProfile = "Assign any parameter profile";
     strings.Properties.AssignedBy = "Assigned By";
     strings.Properties.AssignedOn = "Assigned On";
     strings.Properties.AssignmentFrequency = "Assignment Frequency";
     strings.Properties.AssignmentFunction = "Assignment Function";
     strings.Properties.Attributes = "Attributes";
     strings.Properties.AttributeType = "Attribute Type";
     strings.Properties.AttributeValue = "Attribute Value";
     strings.Properties.Audit = "Audit";
     strings.Properties.AutoCreateCells = "Auto create cells";
     strings.Properties.AutomaticCalculation = "Automatic calculation";
     strings.Properties.BaseConvFactor = "Base Conversion Factor";
     strings.Properties.BaseQuantity = "Base Qty";
     strings.Properties.BaseToUnit = "Base to unit";
     strings.Properties.BaseUom = "Base UoM";
     strings.Properties.BaseUom = "Base UoM";
     strings.Properties.Button = "Button";
     strings.Properties.ButtonActionFunction = "Actions";
     strings.Properties.CalculateAutomatically = "Calculate Automatically";
     strings.Properties.CalculateBothQuantities = "Calculate both quantities";
     strings.Properties.Calculation = "Calculation";
     strings.Properties.CalculationFlag = "Calc Flag";
     strings.Properties.CalculationFunction = "Calculation Function";
     strings.Properties.CalculationMethod = "Calculation Method";
     strings.Properties.Caption = "Caption";
     strings.Properties.Center = "Center";
     strings.Properties.ChartLifeCycle = "Life cycle of  Chart";
     strings.Properties.ChartProperties = "Chart Properties";
     strings.Properties.ChartTitle = "Chart Title";
     strings.Properties.ChartTypes = "Chart Types";
     strings.Properties.CheckBox = "Checkbox";
     strings.Properties.ChildrenCodeMask = "Children Code Mask";
     strings.Properties.CodeMask = "Code Mask";
     strings.Properties.ColumnGroup = "Column Group";
     strings.Properties.ColumnName = "Column Name";
     strings.Properties.ComboBox = "Combobox";
     strings.Properties.CommentRequired = "Comment Required";
     strings.Properties.Company = "Company";
     strings.Properties.Completed = "Completed";
     strings.Properties.CompletedOn = "Completed On";
     strings.Properties.Conditions = "Conditions";
     strings.Properties.ConfirmCompletion = "Confirm Completion";
     strings.Properties.ConfirmParameterAssignment = "Confirm Parameter assignment";
     strings.Properties.Constants = "Constants";
     strings.Properties.ContactImage = "Contact image";
     strings.Properties.ContactInfo = "Contact information";
     strings.Properties.ContactUserInfo = "User Information";
     strings.Properties.Contains = "Contains";
     strings.Properties.Contains = "Contains";
     strings.Properties.Content = "Content";
     strings.Properties.Context = "Context";
     strings.Properties.ContextDescription = "Context Description";
     strings.Properties.ContextDetails = "ContextDetails";
     strings.Properties.ContextInformation = "Context Information";
     strings.Properties.ContextKeys = "Context Keys";
     strings.Properties.ConversionFactor = "Conv Factor";
     strings.Properties.ConversionQuantity = "Qty";
     strings.Properties.ConversionQuantityCalculation = "Conversion quantity calculation";
     strings.Properties.CopyFrom = "Copy From";
     strings.Properties.Cost = "Cost";
     strings.Properties.Count = "Count";
     strings.Properties.CreatedBy = "Created By";
     strings.Properties.CreatedOn = "Created On";
     strings.Properties.CreateEnquiry = "Create Enquiry";
     strings.Properties.CustomFunction = "Custom Function";
     strings.Properties.Data = "Data";
     strings.Properties.DataPoints = "Data Points";
     strings.Properties.DataSeriesSize = "Data series size";
     strings.Properties.Date = "Date";
     strings.Properties.DateA = "Date A";
     strings.Properties.DateAndTime = "Date and Time";
     strings.Properties.DateB = "Date B";
     strings.Properties.DateC = "Date C";
     strings.Properties.DateControl = "Date Control";
     strings.Properties.DateD = "Date D";
     strings.Properties.DateE = "Date E";
     strings.Properties.DateImported = "Imported date";
     strings.Properties.DateTime = "Date/time";
     strings.Properties.DateTimeControl = "Date/time Control";
     strings.Properties.DefaultText = "Default (Text)";
     strings.Properties.DefaultValue = "Default Value";
     strings.Properties.Delay = "Delay";
     strings.Properties.Descending = "Descending";
     strings.Properties.Description = "Description";
     strings.Properties.DetailedProperties = "Detailed Properties";
     strings.Properties.DirectAllergens = "Direct Present Allergens";
     strings.Properties.Discount = "Discount";
     strings.Properties.DiscountedPrice = "Discounted Price";
     strings.Properties.Display = "Display";
     strings.Properties.DisplayColumns = "Display Columns";
     strings.Properties.DisplayFormat = "Display Format";
     strings.Properties.DisplayType = "Display Type";
     strings.Properties.DocumentDescription = "Document Description";
     strings.Properties.Documents = "Documents";
     strings.Properties.DragAndDropHint = "Drag and drop files or images here to upload them";
     strings.Properties.DropDownListBox = "Dropdown List Box";
     strings.Properties.DSP_TITLE = "Caption";
     strings.Properties.DueOn = "Due on";
     strings.Properties.EditField = "Edit Field";
     strings.Properties.EffectiveFrom = "Effective From";
     strings.Properties.EffectiveTill = "Effective Till";
     strings.Properties.EnquiryDescription = "Enquiry Description";
     strings.Properties.EntryPrice = "Entry Price";
     strings.Properties.EquipmentCategory = "Equipment Category";
     strings.Properties.EquipmentDescription = "Equipment Description";
     strings.Properties.EquipmentTypes = "Equipment Types";
     strings.Properties.ExecutionInfo = "Execution info";
     strings.Properties.ExplosionError = "Error";
     strings.Properties.False = "FALSE";
     strings.Properties.False = "FALSE";
     strings.Properties.Filterable = "Filterable";
     strings.Properties.FirstName = "First name";
     strings.Properties.FixedList = "Fixed list";
     strings.Properties.FixedText = "Fixed Text";
     strings.Properties.FixedValue = "Fixed Value";
     strings.Properties.Float = "Float";
     strings.Properties.Format = "Format";
     strings.Properties.FormatCheckbox = "Localizable";
     strings.Properties.Formula = "Formula";
     strings.Properties.FormulationComponentLayout = "Formulation Component Layout";
     strings.Properties.FormulationGridLayout = "Formulation Grid Layout";
     strings.Properties.FormulationNodeLayout = "Formulation Node Layout";
     strings.Properties.FormulationTypeDetails = "Formulation Type Layouts";
     strings.Properties.Frame = "Frame";
     strings.Properties.Frame = "Frame";
     strings.Properties.FrameContext = "Frame Context";
     strings.Properties.FrameNumber = "Frame number";
     strings.Properties.FrameShortDesc = "Frame Short Description";
     strings.Properties.FrameVersion = "Frame Version";
     strings.Properties.FreeSlots = "Free Slots";
     strings.Properties.FrequencyType = "Frequency Type";
     strings.Properties.FrequencyUnit = "Frequency Unit";
     strings.Properties.FrequencyValue = "Frequency Value";
     strings.Properties.Frozen = "Frozen";
     strings.Properties.FunctionArgument = "Function argument";
     strings.Properties.FunctionName = "Function name";
     strings.Properties.GenericPrice = "Generic Price";
     strings.Properties.GetInputFrom = "Get input from:";
     strings.Properties.GracePeriod = "Grace period";
     strings.Properties.HasFormulaWorkbench = "Has FormulaWorkbench";
     strings.Properties.HeaderAlignment = "Header Alignment";
     strings.Properties.Height = "Height";
     strings.Properties.Hidden = "Hidden";
     strings.Properties.ICLifeCycle = "Life cycle of IC";
     strings.Properties.Identification = "Identification";
     strings.Properties.Identifier = "Unique identifier";
     strings.Properties.IFLifeCycle = "Life cycle of info field";
     strings.Properties.InfoFieldLayouts = "Layouts";
     strings.Properties.InheritAttributes = "Inherit attributes";
     strings.Properties.Input = "Input";
     strings.Properties.InServiceDate = "In service date";
     strings.Properties.InstallationDate = "Installation Date";
     strings.Properties.Integer = "Integer";
     strings.Properties.Intervention = "Intervention";
     strings.Properties.InterventionFrequency = "Intervention frequency";
     strings.Properties.InterventionSample = "Intervention Sample";
     strings.Properties.InvestmentCost = "Investment Cost";
     strings.Properties.Item = "Item";
     strings.Properties.ItemDescription = "Item Description";
     strings.Properties.ItemShortDescription = "Item Short Description";
     strings.Properties.ItemType = "Item Type";
     strings.Properties.LadderPrice = "Ladder Price";
     strings.Properties.LastModified = "Last Modified";
     strings.Properties.LastName = "Last name";
     strings.Properties.LastScheduled = "Last scheduled";
     strings.Properties.Layout = "Layout";
     strings.Properties.LayoutEditor = "Layout Editor";
     strings.Properties.LayoutPreview = "Layout Preview";
     strings.Properties.LayoutType = "Layout Type";
     strings.Properties.Left = "Left";
     strings.Properties.Legal = "Legal";
     strings.Properties.LifeCycle = "Life cycle";
     strings.Properties.LifeCyleOfSpecification = "Life cycle of specification";
     strings.Properties.Limits = "Limits";
     strings.Properties.LocalMachine = "Local Machine";
     strings.Properties.Location = "Location";
     strings.Properties.LocationTypes = "Location Types";
     strings.Properties.Lookup = "Lookup";
     strings.Properties.Mandatory = "Mandatory";
     strings.Properties.ManuallyAdded = "Manually added";
     strings.Properties.ManuallyEntered = "Manually entered";
     strings.Properties.Material = "Material";
     strings.Properties.MaterialBaseQuantity = "Base Quantity";
     strings.Properties.MaterialSource = "Material source";
     strings.Properties.MaterialValue = "Material value";
     strings.Properties.MaximumSlots = "Maximum Slots";
     strings.Properties.MaxNoOfCharts = "Max nr. of charts";
     strings.Properties.MaxNoOfSamples = "Max. No. of Samples";
     strings.Properties.MaxQuantity = "Max Qty";
     strings.Properties.Measure = "# of Measur.";
     strings.Properties.MeasurementRanges = "Measurement Ranges";
     strings.Properties.MELifeCycle = "Life cycle of ME";
     strings.Properties.Method = "Method";
     strings.Properties.MethodDefinition = "Method definition";
     strings.Properties.MiddleName = "Middle name";
     strings.Properties.MinimumSlots = "Minimum Slots";
     strings.Properties.MinNoOfResults = "Min. No. of Results";
     strings.Properties.MinQuantity = "Min Qty";
     strings.Properties.ModifiedBy = "Modified By";
     strings.Properties.MultiLineEditField = "Multiline Edit Field";
     strings.Properties.MultipleSelect = "Multiple Select";
     strings.Properties.Name = "Name";
     strings.Properties.NamedUser = "Named user";
     strings.Properties.NewValueAllowed = "New Value Allowed";
     strings.Properties.No = "No";
     strings.Properties.NoCalculation = "No calculation";
     strings.Properties.NoCalculation = "No calculation";
     strings.Properties.NoSorting = "No sorting";
     strings.Properties.NoSorting = "No sorting";
     strings.Properties.Object = "Object";
     strings.Properties.ObjectDescription = "Object Description";
     strings.Properties.ObjectType = "Object Type";
     strings.Properties.OperationalCondition = "Operational condition";
     strings.Properties.OptionalDateInfo = "Optional Date Info";
     strings.Properties.OtherProperties = "Other properties";
     strings.Properties.PALifeCycle = "Life cycle of PA";
     strings.Properties.Parameter = "Parameter";
     strings.Properties.ParameterProfile = "Parameter Profile";
     strings.Properties.PGContext = "PG Context";
     strings.Properties.PGLifeCycle = "Life cycle of PG";
     strings.Properties.PhoneNumber = "Phone Number";
     strings.Properties.PlannedEffectiveDate = "Planned Effective Date";
     strings.Properties.PlannedExecutor = "Planned Executor";
     strings.Properties.PlannedRequests = "Planned requests";
     strings.Properties.PlannedSamples = "Planned samples";
     strings.Properties.Planner = "Planner";
     strings.Properties.PlanningFrequency = "Planning frequency";
     strings.Properties.PlanningType = "Planning type";
     strings.Properties.PlanningType = "Planning type";
     strings.Properties.Plant = "Plant";
     strings.Properties.PlantDescription = "Plant Description";
     strings.Properties.Plants = "Plants";
     strings.Properties.PostActionFunction = "Post Action Function";
     strings.Properties.PostactionNotAvailable = "Post Actions not available on calculated info fields";
     strings.Properties.PPContext = "PP Context";
     strings.Properties.Previews = "Previews";
     strings.Properties.Price = "Price";
     strings.Properties.PriceType = "Price Type";
     strings.Properties.PrimaryEmail = "Primary email";
     strings.Properties.Priority = "Priority";
     strings.Properties.ProcessInstructions = "Process Instructions";
     strings.Properties.Product = "Product";
     strings.Properties.Production = "Production";
     strings.Properties.Properties = "Properties";
     strings.Properties.Property = "Property";
     strings.Properties.PropertyName = "Property Name";
     strings.Properties.PropertyValue = "Property Value";
     strings.Properties.Protected = "Protected";
     strings.Properties.Protocol = "Protocol";
     strings.Properties.ProtocolVersion = "Protocol Version";
     strings.Properties.Quantity = "Quantity";
     strings.Properties.QuantityCalculation = "Quantity calculation";
     strings.Properties.RadioButtonGroup = "Radio Button Group";
     strings.Properties.ReAnalysisDetails = "Reanalysis Details";
     strings.Properties.RequestCodeMask = "Request Code Mask";
     strings.Properties.RequestContext = "Request Context";
     strings.Properties.RequestLifecycle = "Life cycle of request";
     strings.Properties.RequestTypeClasses = "Request Type Classes";
     strings.Properties.RequestTypeVersion = "RQ Type Version";
     strings.Properties.RequiredTime = "Required Time";
     strings.Properties.Responsible = "Responsible";
     strings.Properties.ResultEditable = "Result editable";
     strings.Properties.Right = "Right";
     strings.Properties.Sample = "Sample";
     strings.Properties.SampleContext = "Sample Context";
     strings.Properties.SampleDescription = "Sample Description";
     strings.Properties.SampledOn = "Sampled On";
     strings.Properties.SampleID = "Sample ID";
     strings.Properties.SampleLifeCycle = "Life cycle of sample";
     strings.Properties.SampleType = "Sample type";
     strings.Properties.SampleTypeVersion = "Sample Type Version";
     strings.Properties.Save = "Save";
     strings.Properties.SaveCellTo = "Save cell to:";
     strings.Properties.Select = "Select";
     strings.Properties.SerialNumber = "Serial Number";
     strings.Properties.Severity = "Severity";
     strings.Properties.ShortDescription = "Short Description";
     strings.Properties.showNotification = "showNotification";
     strings.Properties.SingleValue = "Single Value";
     strings.Properties.SOP = "SOP";
     strings.Properties.Sortable = "Sortable";
     strings.Properties.SortAscending = "Ascending";
     strings.Properties.SortByXLabel = "Sort By X Label";
     strings.Properties.SortColumns = "Sort Columns";
     strings.Properties.SortDirection = "Sort Direction";
     strings.Properties.SortOrder = "Sort Order";
     strings.Properties.Source = "Source";
     strings.Properties.SourceSpecification = "Source Specification";
     strings.Properties.SpecificationDescription = "Specification Description";
     strings.Properties.Specifications = "Specifications";
     strings.Properties.SpecificationType = "Specification Type";
     strings.Properties.SpecificationVersion = "Specification Version";
     strings.Properties.Specs = "Specs";
     strings.Properties.SpecSet = "SpecSet";
     strings.Properties.SpinBox = "Spinbox";
     strings.Properties.SpreadSheetConf = "SpreadSheet configuration";
     strings.Properties.SQL = "SQL Statement";
     strings.Properties.SsColNo = "Number of columns";
     strings.Properties.SsRowNo = "Number of rows";
     strings.Properties.StandardAttributes = "Standard Attributes";
     strings.Properties.StandardOperatingProcedure = "Standard Operating Procedure";
     strings.Properties.StandardPrice = "Standard Price";
     strings.Properties.StandardProperties = "Standard Properties";
     strings.Properties.StartedOn = "Started On";
     strings.Properties.StartsWith = "Starts with";
     strings.Properties.Status = "Status";
     strings.Properties.StudyDescription = "Study Description";
     strings.Properties.StudyID = "Study ID";
     strings.Properties.StudyLifeCycle = "Life cycle of Study";
     strings.Properties.Supplier = "Supplier";
     strings.Properties.Target = "Target";
     strings.Properties.TaskKeys = "Task keys";
     strings.Properties.TaskPreferences = "Preferences";
     strings.Properties.TaskType = "Task Type";
     strings.Properties.Tile = "Tile";
     strings.Properties.TileIcon = "Tile Icon";
     strings.Properties.Time = "Time";
     strings.Properties.TimeZone = "Time zone";
     strings.Properties.Title = "Title";
     strings.Properties.TotalQuantity = "Total quantity(%)";
     strings.Properties.ToUnit = "To Unit";
     strings.Properties.Translations = "Translations";
     strings.Properties.True = "TRUE";
     strings.Properties.True = "TRUE";
     strings.Properties.Unit = "Unit";
     strings.Properties.UOM = "Unit of measurement";
     strings.Properties.UpfrontPeriod = "Upfront period";
     strings.Properties.Usage = "Usage";
     strings.Properties.UsageCost = "Usage Cost";
     strings.Properties.UseAsDefault = "Use as Default";
     strings.Properties.UseCurrentVersion = "Use current version";
     strings.Properties.Username = "User name";
     strings.Properties.UserProfiles = "User Profiles";
     strings.Properties.Users = "Users";
     strings.Properties.UseSpecifiedVersion = "Use specified version";
     strings.Properties.Valid = "valid";
     strings.Properties.Validation = "Validation";
     strings.Properties.ValidationFunction = "Validation Function";
     strings.Properties.Value = "Value";
     strings.Properties.ValueAfterValidation = "valueAfterValidation";
     strings.Properties.ValueList = "Value List";
     strings.Properties.Version = "Version";
     strings.Properties.VersionControl = "Version Control";
     strings.Properties.VisualizationStyle = "Visualization Style";
     strings.Properties.VisualizationType = "Visualization Type";
     strings.Properties.WarningLevel = "Warning Level";
     strings.Properties.Width = "Width";
     strings.Properties.Worksheet = "Work Sheet";
     strings.Properties.WorkSheetDescription = "Work Sheet Description";
     strings.Properties.WorkSheetID = "Work Sheet ID";
     strings.Properties.WorkSheetType = "Work Sheet Type";
     strings.Properties.WorkSheetTypeVersion = "Work Sheet Type Version";
     strings.Properties.WPLifeCycle = "Life cycle of Workspace";
     strings.Properties.XAxisTitle = "X Axis Title";
     strings.Properties.XLabel = "X Label";
     strings.Properties.YAxisTitle = "Y Axis Title";
     strings.Properties.YAxisUnit = "Y Axis Unit";
     /*Properties endRegion*/
     /*RequestClassHierarchy region*/
     strings.RequestClassHierarchy = { };
     strings.RequestClassHierarchy.CantBeDeleted = "Can not be deleted, because exist request types of this class";
     strings.RequestClassHierarchy.Description = "Description";
     strings.RequestClassHierarchy.Hierarchy = "Hierarchy mode";
     strings.RequestClassHierarchy.Parent = "Parent";
     strings.RequestClassHierarchy.RequestClassHierarchyDTO = "RequestClassHierarchyDTO";
     strings.RequestClassHierarchy.RequestType = "Request Type Class";
     strings.RequestClassHierarchy.SwitchToHierarchy = "Hierarchy mode";
     strings.RequestClassHierarchy.SwitchToNonHierarchy = "Non-hierarchy mode";
     /*RequestClassHierarchy endRegion*/
     /*statusChange region*/
     strings.statusChange = { };
     strings.statusChange.Approve = "Approve";
     strings.statusChange.approveReason = "Type an approval reason...";
     strings.statusChange.ApproveSelectedObjects = "Approve selected objects";
     strings.statusChange.ChangeStatusOf = "Change Status of";
     strings.statusChange.ChangeStatusOfSelectedObjects = "Change status of selected objects";
     strings.statusChange.eSignatureRequired = "Electronic Signature is required.";
     strings.statusChange.eSignatureRequiredMultiple = "Electronic Signature required for {0} records.";
     strings.statusChange.password = "Password";
     strings.statusChange.predefinedReason = "Select predefined comment";
     strings.statusChange.predefinedReasonSelect = "Select... ";
     strings.statusChange.Reject = "Reject";
     strings.statusChange.rejectReason = "Type a rejection reason...";
     strings.statusChange.RejectSelectedObjects = "Reject selected objects";
     strings.statusChange.typeReason = "Type a status change reason...";
     strings.statusChange.username = "Username";
     /*statusChange endRegion*/
     /*TaskKeys region*/
     strings.TaskKeys = { };
     strings.TaskKeys.AddFilter = "Add filter";
     strings.TaskKeys.After = "After";
     strings.TaskKeys.Attribute = "Attribute";
     strings.TaskKeys.AutocComplete = "AutoComplete";
     strings.TaskKeys.Before = "Before";
     strings.TaskKeys.Between = "Between";
     strings.TaskKeys.Caption = "Caption";
     strings.TaskKeys.character = "1 character";
     strings.TaskKeys.characters = "{0} characters";
     strings.TaskKeys.ComboBox = "ComboBox";
     strings.TaskKeys.Contains = "Contains";
     strings.TaskKeys.Date = "Date";
     strings.TaskKeys.DateInterval = "Date interval";
     strings.TaskKeys.defaultValueFunctionLabel = "Default value function: ";
     strings.TaskKeys.DisplayType = "Display type";
     strings.TaskKeys.Dropdown = "Dropdown";
     strings.TaskKeys.Equals = "Equals";
     strings.TaskKeys.Existing = "Existing";
     strings.TaskKeys.FixedList = "Fixed list";
     strings.TaskKeys.included = "Included";
     strings.TaskKeys.InfoField = "Info field";
     strings.TaskKeys.InvalidSql = "Invalid sql statement";
     strings.TaskKeys.IsHidden = "Is hidden";
     strings.TaskKeys.IsMandatory = "Is mandatory";
     strings.TaskKeys.IsProtected = "Is protected";
     strings.TaskKeys.NotEquals = "Not equals";
     strings.TaskKeys.Object = "Object";
     strings.TaskKeys.On = "On";
     strings.TaskKeys.Operator = "Operator";
     strings.TaskKeys.Property = "Property";
     strings.TaskKeys.searchAfterLabel = "Search after: ";
     strings.TaskKeys.SortOrder = "Sort order";
     strings.TaskKeys.SqlQuery = "Sql query";
     strings.TaskKeys.StartsWith = "Starts with";
     strings.TaskKeys.ValueFieldExplanation = "Use VALUEFIELD alias for the field used as filter";
     strings.TaskKeys.valueListOrderLabel = "Value list order: ";
     strings.TaskKeys.ValueSource = "Value source";
     /*TaskKeys endRegion*/
     /*TaskPreferences region*/
     strings.TaskPreferences = { };
     strings.TaskPreferences.aulistLy = "Layout for material attributes";
     strings.TaskPreferences.chartStatHeaderLy = "Layout for chart statistics in Result Validation grid";
     strings.TaskPreferences.chlistChLy = "Layout for charts";
     strings.TaskPreferences.compListCompLy = "Layout for components";
     strings.TaskPreferences.dclistDcLy = "Layout for documents";
     strings.TaskPreferences.dclistDcSeLy = "Layout for document selection";
     strings.TaskPreferences.defaultValue = "{0} (default)";
     strings.TaskPreferences.eqlistEqLy = "Layout for equipments";
     strings.TaskPreferences.eqlistIntLy = "Layout for interventions";
     strings.TaskPreferences.framelistSeLy = "Layout for frame selection";
     strings.TaskPreferences.iplistSeLy = "Layout for info profile selection";
     strings.TaskPreferences.materiallistLy = "Layout for materials";
     strings.TaskPreferences.melistMeLy = "Layout for methods";
     strings.TaskPreferences.meReanalysisLy = "Layout for method reanalysis";
     strings.TaskPreferences.palistLy = "Layout for parameters";
     strings.TaskPreferences.paReanalysisLy = "Layout for parameter reanalysis";
     strings.TaskPreferences.resultValHeaderLy = "Layout for samples header in Result Validation grid";
     strings.TaskPreferences.resultValPaAuLy = "Layout for parameter attribute in Result Validation grid";
     strings.TaskPreferences.resultValPref = "Context for Result Validation";
     strings.TaskPreferences.resultValScPaSpecLy = "Layout for specification overlay in Result Validation grid";
     strings.TaskPreferences.rqcreateRqLy = "Layout for request template";
     strings.TaskPreferences.rqCreateSc = "Sample creation";
     strings.TaskPreferences.rqlistPaAuLy = "Layout for parameter attributes in pivot table";
     strings.TaskPreferences.rqlistPaLy = "Layout for parameters";
     strings.TaskPreferences.rqlistPgLy = "Layout for parameter groups";
     strings.TaskPreferences.rqlistRqHeaderLy = "Layout for requests in pivot table";
     strings.TaskPreferences.rqlistRqLy = "Layout for requests";
     strings.TaskPreferences.rqlistScHeaderLy = "Layout for samples in pivot table";
     strings.TaskPreferences.rqlistScLy = "Layout for samples";
     strings.TaskPreferences.rqlistSpLy = "Layout for specifications";
     strings.TaskPreferences.rqlistTk = "Task to open created requests";
     strings.TaskPreferences.scCreatePg = "Parameter group creation";
     strings.TaskPreferences.sccreateScLy = "Layout for sample types";
     strings.TaskPreferences.sclistPaLy = "Layout for parameters";
     strings.TaskPreferences.sclistPgLy = "Layout for parameter groups";
     strings.TaskPreferences.sclistScLy = "Layout for samples";
     strings.TaskPreferences.sclistTk = "Task to open created samples";
     strings.TaskPreferences.scpaspecLy = "Layout for specification overlay";
     strings.TaskPreferences.speclistLy = "Layout for specifications";
     strings.TaskPreferences.speclistSeLy = "Layout for specification selection";
     strings.TaskPreferences.speclistTk = "Task to open created specifications";
     strings.TaskPreferences.wsCreateSc = "Sample creation";
     strings.TaskPreferences.wscreateWsLy = "Layout for worksheet types";
     strings.TaskPreferences.wslistTk = "Task to open created worksheets";
     strings.TaskPreferences.wslistWsLy = "Layout for worksheets";
     /*TaskPreferences endRegion*/
     /*TextFields region*/
     strings.TextFields = { };
     strings.TextFields.AddNewDocument = "Add New Document";
     strings.TextFields.AddNewInfocards = "Add New Info Cards";
     strings.TextFields.AllNotExecuted = "All Not Executed";
     strings.TextFields.ApplicationCulture = "Application culture:";
     strings.TextFields.ApplicationLanguage = "Application language:";
     strings.TextFields.AsGauger = "As Gauge";
     strings.TextFields.AssignPlantToSpecification = "Assign Plant to specification";
     strings.TextFields.Attributes = "Attributes";
     strings.TextFields.AttributeType = "Attribute Type";
     strings.TextFields.AvailableReports = "Available Reports";
     strings.TextFields.BarcodeReader = "Barcode Reader";
     strings.TextFields.CalculatedParameter = "Calculated Parameter";
     strings.TextFields.Caption = "Caption";
     strings.TextFields.Chart = "Chart";
     strings.TextFields.Charts = "Charts";
     strings.TextFields.ChartsAndTrends = "Charts and Trends";
     strings.TextFields.CollapseAll = "Collapse All";
     strings.TextFields.ColumnFormat = "Format";
     strings.TextFields.ColumnItemType = "Column item type";
     strings.TextFields.Configuration = "Configuration";
     strings.TextFields.Connectors = "Connectors";
     strings.TextFields.Contributed = "Contributed";
     strings.TextFields.ContributedParameter = "Contributed Parameter";
     strings.TextFields.CopySpec = "Copy Spec";
     strings.TextFields.CreateShortcut = "Create a Shortcut Widget to this Filter Results";
     strings.TextFields.CurrentLaunchpad = "Current Launchpad";
     strings.TextFields.CurrentTask = "Current Task";
     strings.TextFields.CurrentUser = "Current User:";
     strings.TextFields.Database = "Database:";
     strings.TextFields.DataLanguage = "Data language:";
     strings.TextFields.DefaultValue = "Default value";
     strings.TextFields.DisplayTitle = "Display Title";
     strings.TextFields.DisplayType = "Display Type";
     strings.TextFields.Documents = "Documents";
     strings.TextFields.EditingMode = "Editing Mode";
     strings.TextFields.EnterDefaultValue = "Enter default value";
     strings.TextFields.EnterValue = "Enter value...";
     strings.TextFields.EquipmentManagement = "Equipment Mgmt.";
     strings.TextFields.ExpandAll = "Expand All";
     strings.TextFields.ExpandFirst = "Expand First";
     strings.TextFields.File = "File";
     strings.TextFields.Filter = "Filter...";
     strings.TextFields.FilterInfoCards = "Filter InfoCards here...";
     strings.TextFields.FilterText = "Filter";
     strings.TextFields.FilterWidgets = "Filter Widgets";
     strings.TextFields.FirstNotExecuted = "First Not Executed";
     strings.TextFields.Formula = "Formula";
     strings.TextFields.Formulation = "Formulation";
     strings.TextFields.FormulationNavigation = "Navigation";
     strings.TextFields.GenericConfiguration = "Quality Mgmt.";
     strings.TextFields.Hierarchy = "Hierarchy";
     strings.TextFields.InfoCards = "Info Cards";
     strings.TextFields.InfoFields = "Info Fields";
     strings.TextFields.Interventions = "Interventions";
     strings.TextFields.IoIdentifiers = "Input/Output Identifier";
     strings.TextFields.IoNotifications = "Input/Output notifications";
     strings.TextFields.isCompleted = " is now completed?";
     strings.TextFields.ItemShortDescription = "Item Short Description";
     strings.TextFields.ItemType = "Item Type";
     strings.TextFields.ItemValueField = "Item Value Field";
     strings.TextFields.LastSelected = "Last Selected";
     strings.TextFields.LaunchpadToAssign = "Launchpad to assign";
     strings.TextFields.Link = "Link";
     strings.TextFields.Management = "Management";
     strings.TextFields.MandatoryToComplete = "Mandatory to complete";
     strings.TextFields.Material = "Material";
     strings.TextFields.MaterialAttribute = "Material Attribute";
     strings.TextFields.Max = "Max";
     strings.TextFields.MethodCells = "Method Cells";
     strings.TextFields.MethodProperties = "Method Properties";
     strings.TextFields.MethodSheets = "Method Sheets";
     strings.TextFields.Min = "Min";
     strings.TextFields.NotificationBadge = "Notification Badge";
     strings.TextFields.OpenChartList = "Open Chart List";
     strings.TextFields.OpenDocuments = "Open Documents";
     strings.TextFields.OpenEquipmentList = "Open Equipment List";
     strings.TextFields.Parameter = "Parameter";
     strings.TextFields.ParameterProfileContextLabel = "Context";
     strings.TextFields.PinRolledupComponentList = "Pin";
     strings.TextFields.PredefinedTasks = "Predefined Tasks";
     strings.TextFields.Processing = "Processing...";
     strings.TextFields.Properties = "Properties";
     strings.TextFields.Protected = "Protected";
     strings.TextFields.RequestClassManagement = "Request Class Mgmt.";
     strings.TextFields.Results = "Results";
     strings.TextFields.ResultValidation = "Result Validation";
     strings.TextFields.SampleProperties = "Sample Properties";
     strings.TextFields.Samples = "Samples";
     strings.TextFields.SearchHere = "Search here...";
     strings.TextFields.SearchResults = "Search Results";
     strings.TextFields.Select = "Select ...";
     strings.TextFields.SelectDataBase = "Select database...";
     strings.TextFields.SetupConfiguration = "Setup Configuration";
     strings.TextFields.ShowAllDisciplines = "Show all disciplines";
     strings.TextFields.ShowAllInfoFields = "Show all Info Fields";
     strings.TextFields.ShowMoreResults = "Loading more results...";
     strings.TextFields.ShowMyDisciplines = "Show my disciplines";
     strings.TextFields.SortAscending = "Sort Ascending";
     strings.TextFields.SortDefault = "Default Sort";
     strings.TextFields.SortDescending = "Sort Descending";
     strings.TextFields.SpecManagement = "Specification Mgmt.";
     strings.TextFields.StandardProperties = "Standard Properties";
     strings.TextFields.UniconnectFile = "Uniconnect File";
     strings.TextFields.UniconnectFileUpload = "Upload Uniconnect File";
     strings.TextFields.UnilinkFile = "Unilink File";
     strings.TextFields.UnilinkFileUpload = "Upload Unilink File";
     strings.TextFields.UnpinRolledupComponentList = "Unpin";
     strings.TextFields.UploadDocument = "Upload Document";
     strings.TextFields.URL = "URL";
     strings.TextFields.User = "User:";
     strings.TextFields.UserManagement = "User & Contact Mgmt.";
     strings.TextFields.Validation = "Validation";
     strings.TextFields.ValidationReport = "Validation Report";
     strings.TextFields.Value = "Value";
     strings.TextFields.Version = "Version:";
     strings.TextFields.WidgetDescription = "Description";
     strings.TextFields.WidgetTitle = "Title";
     strings.TextFields.WidgetUrl = "URL (http://www.example.com)";
     /*TextFields endRegion*/
     /*timeSince region*/
     strings.timeSince = { };
     strings.timeSince.days = "%1 days ago";
     strings.timeSince.days = "%1 days ago";
     strings.timeSince.hours = "%1 hours ago";
     strings.timeSince.hours = "%1 hours ago";
     strings.timeSince.minutes = "%1 minutes ago";
     strings.timeSince.minutes = "%1 minutes ago";
     strings.timeSince.months = "%1 months ago";
     strings.timeSince.months = "%1 months ago";
     strings.timeSince.seconds = "%1 seconds ago";
     strings.timeSince.seconds = "%1 seconds ago";
     strings.timeSince.years = "%1 years ago";
     strings.timeSince.years = "%1 years ago";
     /*timeSince endRegion*/
     /*UserMgt region*/
     strings.UserMgt = { };
     strings.UserMgt.searchUserInActiveDirectory = "Search user...";
     strings.UserMgt.selectDomain = "Select domain...";
     strings.UserMgt.SelectedUsers = "Selected Users";
     /*UserMgt endRegion*/
     /*validation region*/
     strings.validation = { };
     strings.validation.AndSymbolIsInvalid = "The '&' character is invalid!";
     strings.validation.BasedOnAsignmentFrequency = "Based on assignment frequency.";
     strings.validation.between = " between {0} and {1}";
     strings.validation.BomNotAvailable = "No Bill of Material is opened to do the Explosion.";
     strings.validation.databaseRequired = "An initial configuration must be defined!";
     strings.validation.deviation = "Deviation must be ";
     strings.validation.DocumentUpladedSuccessfuly = "<b>{0}</b> has been successfully uploaded!";
     strings.validation.email = "Not a valid Email adress!";
     strings.validation.ErrorProcessDocument = "There was an error processing your document.<br /> Please try again.";
     strings.validation.HashSymbolIsInvalid = "The '#' character is invalid!";
     strings.validation.higher = "higher than {0}";
     strings.validation.InvalidFormat = "Invalid format.";
     strings.validation.InvalidSQL = "Invalid SQL statement";
     strings.validation.InvalidValue = "Invalid value: '{0}'";
     strings.validation.isNumeric = "Please specify a valid number.";
     strings.validation.lengthExceeded = "The maximum numbers of characters has been exceeded.";
     strings.validation.less = "less than {0}";
     strings.validation.limit = "Limit must be ";
     strings.validation.MandatoryInforFields = "There are no mandatory infofields.";
     strings.validation.meCellValidationError = "This field cannot be empty! It must start with a letter followed by numbers and/or underscore!";
     strings.validation.minLenghtValidation = "This field must be at least xx chars long";
     strings.validation.MRComponentNameNotUnique = "Component name must be unique";
     strings.validation.MRComponentNameRequired = "Component name is required";
     strings.validation.MRLimitsNumericValuesMultiple = "Limits {0} and {1} must have a numeric value";
     strings.validation.MRLimitsNumericValuesSingle = "Limit {0} must have a numeric value";
     strings.validation.NoContextForSample = "No context for sample.";
     strings.validation.NoDataToDisplay = "No data to display.";
     strings.validation.NoInfocards = "No infocards.";
     strings.validation.NoItemFound = "No Item Found";
     strings.validation.NoItems = "No single item selected";
     strings.validation.NoItemsToDisplay = "Item does not have properties to display!";
     strings.validation.NoMethodSelected = "No method selected.";
     strings.validation.passwordRequired = "Password is required";
     strings.validation.ProcentSymbolIsInvalid = "The '%' character is invalid!";
     strings.validation.reasonRequired = "Reason is required";
     strings.validation.required = "This field is required.";
     strings.validation.singleLayout = "You must select a layout as default!";
     strings.validation.spec = "Value must be";
     strings.validation.StatusNoModification = "Status of {0} does not allow modifications.";
     strings.validation.usernameRequired = "Username is required";
     strings.validation.ValidSqlStatement = "Valid SQL statement.";
     strings.validation.ValuesFSS = "LOW: {0} HIGH: {1}";
     /*validation endRegion*/
     /*ViewHeaderTitles region*/
     strings.ViewHeaderTitles = { };
     strings.ViewHeaderTitles.AddAComment = "Add a comment";
     strings.ViewHeaderTitles.AddCommentFor = "Add comment for ";
     strings.ViewHeaderTitles.AddCommentForSelectedItems = "Add comment for selected items";
     strings.ViewHeaderTitles.AssignLaunchpad = "Assign Launchpad to Users";
     strings.ViewHeaderTitles.BomExplosion = "BoM Explosion";
     strings.ViewHeaderTitles.Chart = "Chart ";
     strings.ViewHeaderTitles.ChartFor = "Chart for ";
     strings.ViewHeaderTitles.DiscardCustomLaunchpad = "Delete Custom Launchpad";
     strings.ViewHeaderTitles.DiscardGlobalLaunchpad = "Delete Launchpad";
     strings.ViewHeaderTitles.EditWidget = "Edit Widget Properties";
     strings.ViewHeaderTitles.FilterResults = "Filter Results";
     strings.ViewHeaderTitles.FilterSettings = "Filter Settings";
     strings.ViewHeaderTitles.FormulationComponentLists = "Component List";
     strings.ViewHeaderTitles.FormulationTree = "Formulation Tree ";
     strings.ViewHeaderTitles.FormulaWorkbench = "Formula Workbench";
     strings.ViewHeaderTitles.Hierarchy = "Hierarchy";
     strings.ViewHeaderTitles.HierarchyViewOfOf = "Hierarchy of {0} {1}";
     strings.ViewHeaderTitles.HierarchyViewOfSpecification = "Hierarchy of {0}[{1}]";
     strings.ViewHeaderTitles.InfoCards = "Info Cards";
     strings.ViewHeaderTitles.InfoCardsEnquiry = "Info Cards of Enquiry ";
     strings.ViewHeaderTitles.InfoCardsFormulation = "Info Cards of Formulation ";
     strings.ViewHeaderTitles.InfoCardsRequest = "Info Cards of Request ";
     strings.ViewHeaderTitles.InfoCardsSample = "Info Cards of Sample ";
     strings.ViewHeaderTitles.InfoCardsSpecification = "Info Cards of {0}[{1}]";
     strings.ViewHeaderTitles.InfoCardsSpecificationOpenRequest = "Info Cards of Specification {0}";
     strings.ViewHeaderTitles.InfoCardsStudy = "Info Cards of Study ";
     strings.ViewHeaderTitles.InfoCardsWorksheet = "Info Cards of Work Sheet ";
     strings.ViewHeaderTitles.InterventionsEquipment = "Interventions of Equipment ";
     strings.ViewHeaderTitles.LayoutPreview = "Layout Preview";
     strings.ViewHeaderTitles.Material = "Material";
     strings.ViewHeaderTitles.Materials = "Materials";
     strings.ViewHeaderTitles.MethodSheets = "MethodSheets ";
     strings.ViewHeaderTitles.MethodSheetsMethod = "MethodSheets of Method {0} for Sample {1}";
     strings.ViewHeaderTitles.MethodSheetsMethodParents = "MethodSheets of Sample {0}";
     strings.ViewHeaderTitles.MindMap = "Mind Map";
     strings.ViewHeaderTitles.MindMapToggle = "Toggle Mind Map";
     strings.ViewHeaderTitles.ParameterGroupsSample = "Results of Sample ";
     strings.ViewHeaderTitles.Prices = "Prices";
     strings.ViewHeaderTitles.Properties = "Properties  ";
     strings.ViewHeaderTitles.PropertiesDocument = "Properties of Document ";
     strings.ViewHeaderTitles.PropertiesEquipment = "Properties of Equipment ";
     strings.ViewHeaderTitles.PropertiesFormulation = "Properties of Formulation ";
     strings.ViewHeaderTitles.PropertiesMaterial = "Properties of Material {0}";
     strings.ViewHeaderTitles.PropertiesMethod = "Properties of Method {0} in Sample {1}";
     strings.ViewHeaderTitles.PropertiesOf = "Properties of ";
     strings.ViewHeaderTitles.PropertiesOfNew = "Properties of new ";
     strings.ViewHeaderTitles.PropertiesOfNewMaterial = "Properties of New Material ";
     strings.ViewHeaderTitles.PropertiesOfNewPrice = "Properties of New Price ";
     strings.ViewHeaderTitles.PropertiesOfOf = "Properties of {0} {1}";
     strings.ViewHeaderTitles.PropertiesRequest = "Properties of Request ";
     strings.ViewHeaderTitles.PropertiesSample = "Properties of Sample ";
     strings.ViewHeaderTitles.PropertiesSpecification = "Properties of {0}[{1}]";
     strings.ViewHeaderTitles.PropertiesSpecificationOpenRequest = "Properties of Specification {0}";
     strings.ViewHeaderTitles.PropertiesStudy = "Properties of Study ";
     strings.ViewHeaderTitles.PropertiesWorksheet = "Properties of Work Sheet ";
     strings.ViewHeaderTitles.RequestDetails = "Request Details for";
     strings.ViewHeaderTitles.ResultValidation = "Result Validation";
     strings.ViewHeaderTitles.RolledupFormulationComponentLists = "Rolledup Component List";
     strings.ViewHeaderTitles.SamplesRequest = "Samples for ";
     strings.ViewHeaderTitles.SaveAsNewLaunchpad = "Save As New Launchpad";
     strings.ViewHeaderTitles.SelectBomLayout = "Select layout for BOM grid";
     strings.ViewHeaderTitles.SpecificationHeader = "Header for Specification";
     strings.ViewHeaderTitles.SpecificationSections = "Sections for Specification";
     strings.ViewHeaderTitles.Toolbox = "Toolbox";
     strings.ViewHeaderTitles.TrafficLightItems = "Favorites";
     strings.ViewHeaderTitles.WorksheetDetails = "Work Sheet Details for";
     /*ViewHeaderTitles endRegion*/
     /*workspace region*/
     strings.workspace = { };
     strings.workspace.Active = "Active";
     strings.workspace.copyAllBtn = "Copy all";
     strings.workspace.copyBtn = "Copy";
     strings.workspace.createBtn = "Create new Workspace";
     strings.workspace.deleteBtn = "Close Workspace";
     strings.workspace.dialogConfirmDelete = "Are you sure you want to close the selected Workspace(s): {0} ?";
     strings.workspace.errorMesgLoadDestinationDbForGsmError = "Error on loading target databases.";
     strings.workspace.errorMesgNoFarWpNew = "No functional access right to create a Workspace!";
     strings.workspace.errorMesgNoFarWpSave = "No functional access right to save a Workspace!";
     strings.workspace.GsmSyncLogs = "Logs";
     strings.workspace.GsmSyncObjectSuccess = "Object of type \{0}\ with short description \{1}\ and description \{2}\ was successfully synchronized";
     strings.workspace.GsmSyncProcessFinished = "Synchronization process is finished.";
     strings.workspace.Historic = "Historic";
     strings.workspace.reopenBtn = "Reopen Workspace";
     strings.workspace.SaveFailed = "Save failed!";
     strings.workspace.SaveSucceded = "Save Workspace completed successfully!";
     strings.workspace.selectDestinationDbForGsm = "Destination database...";
     strings.workspace.SelectWorkspaceFirst = "Please select a default Workspace first.";
     strings.workspace.synchronize = "Synchronize";
     strings.workspace.workspaceListHeader = "Workspace list";
     /*workspace endRegion*/
} (strings));
